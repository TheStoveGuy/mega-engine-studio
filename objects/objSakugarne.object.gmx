<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSakugarne</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>mskMegaman</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

wpnID = 10; //Weapon ID

ammo_cost = 1;

image_speed = 0;

penetrate = 0;
pierces = 2;

canhit = -1;

xspeed=0;
yspeed=0;
grav=0;

Active = false;

Bounce = 3;
Gravity = 0.2;
ground = false;

inWater = 0;

canhit = -1;
PlayerEnemyCheck = false; // Check to keep the player from getting hit when bouncing on an enemy

rider = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if instance_exists(rider)
{
    //rider.visible = true;
    //rider.canShoot = true;
    rider.onSakugarne = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Active
{
    with rider
    {
        playerHandleSprites("Sakugarne"+string(other.image_index));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if global.weapon[parent.player_id] != sakugarne
{
    instance_destroy(); exit;
}

if image_yscale != global.GravityDir
{
    y += (sprite_height*global.GravityDir)*-global.GravityDir;
    image_yscale = global.GravityDir;
}

if !global.frozen
{
    if !Active //Mount Sakugarne
    {
        with parent
        {
            if !isSlide &amp;&amp; !climbing
            {
                with other
                {
                    if position_meeting(x,y,other.id) &amp;&amp; !Active
                    {
                        rider = other.id;
                        x = rider.x;
                        y = rider.y;
                        Active = true;
                        canhit = 0;
                    }
                }
            }
        }
    }
    
    if Active //Riding it
    {
        if global.ammo[player_id,global.weapon[player_id]] &gt; 0 &amp;&amp; instance_exists(rider)
        {
            with rider
            {
                onSakugarne = true;
                playLandSound = 0;
                playLandSoundTimer = 0;
            }
            
            yspeed = rider.yspeed;
            image_xscale = rider.image_xscale;
            x = rider.x;
            y = rider.y+10*global.GravityDir;
            
            //Take away ammo
            global.ammo[player_id,global.weapon[player_id]] = max(0,global.ammo[player_id,global.weapon[player_id]]-(0.015/(global.energySaver+1)));
        }
        else //Teleport away
        {
            i = instance_create(x,y+16-8,objRushTeleport);
            i.upordown = 'up';
            i.parent = parent;
            instance_destroy();
            canhit = -1;
            Active = 0;
        }
    }
    
    if Active
    {
        if !rider.ground
        {
            with rider
            {
                ground = 1;
                y += 6*global.GravityDir;
                playerGround();
                y -= 6*global.GravityDir;
                if place_meeting(x,y+8*global.GravityDir,objSpike) {ground = 1;}
            }
        }
        if rider.ground &amp;&amp; rider.yspeed &gt;= 0
        {
            event_user(11);
            
            if image_index = 0 {
                playSFX(sfxClamp);
            }
            else {
                playSFX(sfxLargeClamp);
            }
            
            rider.ground = 0;
        }
    }
    else
    {
        checkGroundGravity();
        gravityCheckGroundReverseGravity();
        generalCollisionGravity();
        
        x += xspeed;
        y += yspeed;
        
        if ground &amp;&amp; yspeed &gt;= 0 
        {
            yspeed = -(Bounce)*global.GravityDir;
            image_index = 0;
            playSFX(sfxClamp);
        }
    }
}

if instance_exists(objSectionSwitcher) &amp;&amp; Active
{
    x = objSectionSwitcher.x;
    y = objSectionSwitcher.y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="prtEnemyProjectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !Active {exit;}

event_user(11);

if other.reflectable = 1
{
    playSFX(sfxEnemyHit);
    with other
    {
        instance_create(bbox_get_xcenter(),bbox_get_ycenter(),objExplosion);
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !Active
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !Active {exit;}

if rider.yspeed &gt;= 0 &amp;&amp; !global.timeStopped
{
    spadd = 1;
    if rider.canMove
    {
        spadd += global.keyJumpPressed[rider.player_id];
    }

    rider.yspeed = -(Bounce*spadd)*global.GravityDir;
    image_index = spadd-1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playSFX(sfxReflect);

event_user(11);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Active {exit;}
    
SquareSize = 48;
spr = global.playerSprite[player_id]
col[0] = c_white;
col[1] = global.primaryCol[player_id];
col[2] = global.secondaryCol[player_id];
col[3] = global.outlineCol[player_id];

for (i=0; i&lt;4; i+=1;) 
{
    draw_sprite_part_ext(
        spr,i,
        1+(floor(27+image_index)*(SquareSize+3)),
        1+(floor(4)*(SquareSize+3)),
        SquareSize,SquareSize,
        round(x)-(22*image_xscale),
        round(y)-(30*image_yscale),
        image_xscale,image_yscale,
        col[i],image_alpha
    );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
