<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKeyGate</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtGimmick</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
Solid = true;
mySolid = noone;

frozen = 0;
boss = 0;

dead = false;
canHit = true;

beingKilled = false;
killTimer = 0;

image_speed = 0;
image_index = 0;

respawnRange = -1;
despawnRange = -1;

norespawn = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; visible
{
    if instance_exists(mySolid)
    {
        if Solid
        {
            mySolid.xspeed = mySolid.x-x;
            mySolid.yspeed = mySolid.y-y;
        }
        else if !Solid
        {
            with mySolid {instance_destroy();}
            mySolid = noone;
        }
    }
    else if Solid
    {
        mySolid = instance_create(x,y,objSolidIndependent);
        mySolid.sprite_index = sprite_index;
        mySolid.visible = false;
        mySolid.respawn = false;
    }
    
    with objMegaman
    {
        if global.keyNumber &gt; 0
        {
            with other
            {
                if !beingKilled
                {
                    if collision_rectangle(bbox_left-3,bbox_top,bbox_right+3,bbox_bottom,other.id,false,true)
                    {
                        playSFX(sfxWheelCutter2);
                        global.keyNumber -= 1;
                        beingKilled = true;
                        respawn = false;
                        if norespawn
                        {
                            with objGlobalControl
                            {
                                ds_list_add(pickups,string(room)+'/'+string(other.id))
                            }
                        }
                    }
                }
            }
        }
    }
    
    if beingKilled
    {
        killTimer += 1;
    }
    if killTimer == 6 or killTimer == 12 or killTimer == 18 or killTimer == 24
    { 
        image_index += 1;
    }
    if killTimer == 32 
    {
        visible = false;
        if instance_exists(mySolid)
        {
            with mySolid {instance_destroy();}
        }
        instance_create(bbox_get_xcenter(),bbox_get_ycenter(),objExplosion);
        playSFX(sfxEnemyHit);
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
