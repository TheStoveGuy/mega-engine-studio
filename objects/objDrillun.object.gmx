<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDrillun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 5;

//Enemy specific code
image_speed = 0.2;

ground = 0;

ysp = 0;
mysolid = -1;
alarmstop = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !dead {
    if mysolid = -1 {
        mysolid = instance_create(x,y,prtMovingPlatformJumpthrough);
        mysolid.sprite_index = sprDrillunBlock;
        mysolid.image_xscale = image_xscale;
        mysolid.respawn = false;
        //mysolid.doesShift = 0;
    }
    else {
        instance_activate_object(mysolid);
        if !instance_exists(mysolid) {
            mysolid = -1;
        }
    }
}
else {
    if mysolid != -1 {
        instance_activate_object(mysolid);
        with mysolid {instance_destroy();}
        mysolid = -1;
    }
}

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper {
    if instance_exists(target) {
        if abs(target.x-x) &lt; 48 {
            if y = ystart {
                yspeed = 2.5;
            }
        }
    }
    if alarmstop {
        alarmstop += 1;
        if alarmstop = 21 {
            yspeed = -0.5;
            alarmstop = 0;
        }
    }
    ysp = yspeed;
    checkGround();
    generalCollision();
    x+=xspeed;
    y+=yspeed;
    if yspeed = 0 {
        if ysp &gt; 0 {
            alarmstop = 1;
            repeat(2) {
                image_xscale*=-1;
                i = instance_create(x+5*image_xscale,bbox_bottom-1,objSlideDust);
                i.image_xscale = -image_xscale;
            }
        }
    }
    if yspeed &lt; 0 {
        if y &lt;= ystart {
            yspeed = 0; y = ystart;
        }
    }
    if mysolid != -1 {
        //mysolid.x = x;
        mysolid.xspeed = x-mysolid.x;
        //mysolid.y = y;
        mysolid.yspeed = y-mysolid.y;
        mysolid.image_xscale = image_xscale;
        mysolid.visible = 0;
        //event_perform(ev_step,ev_step_normal);
    }
}
else if dead {
    alarmstop = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if flashing = 1 or flashing = 3 {
    d3d_set_fog(true, c_white, 0, 0);
}

if !ground {
    drawSelf();
}
else {
    draw_sprite_part(sprite_index,image_index,0,0,sprite_width,sprite_height-2,x-sprite_xoffset,y-sprite_yoffset);
}

if flashing = 1 or flashing = 3 {
    d3d_set_fog(false, 0, 0, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
