<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCricket</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>prtMovingPlatformJumpthrough</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Hops = ; (how many hops before heading the other direction, -1 will be infinite)
// Direction = ; (1 = right, -1 left)

event_inherited();

respawn = true;

Offset = 0;

Direction = 1;
init = 1;

Hops = 3;
startHops = Hops;

Phase = 0;
xspeed = 0;
yspeed = 0;
timer = 0;

y -= 3;

Active = false;
Ground = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if init
{
    init = 0;
    startHops = Hops;
}

event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper {
    if instance_exists(target) {
        if place_meeting(x,y-1,target) &amp;&amp; Phase = 0
        &amp;&amp; target.ground &amp;&amp; target.bbox_bottom = bbox_top-1 {
            Active = true;
        }
    }
    if Active {
        timer += 1;
        switch(timer) {
        case -9:
            yspeed = 0;
            break;
        case -5:
            image_index = 0;
            yspeed = -5;
            break;
        case -4:
            yspeed = 0;
            break;
        case 10:
            image_index = 1;
            yspeed = 5;
            break;
        case 11:
            yspeed = 0;
            break;
        case 30:
            image_index = 2;
            yspeed = -8;
            playSFX(sfxCricket);
            break;
        case 31:
            yspeed = 0;
            break;
        case 33:
            image_index = 3;
            yspeed = -4-5;
            break;
        case 34:
            yspeed += 5;
            break;
        }
        if timer &gt; 33 {
            yspeed += 0.15;
            xspeed = Direction;
            while place_meeting(x+xspeed,y,objSolid)
            or place_meeting(x+xspeed,y,prtMovingPlatformSolid)
            {
                xspeed -= Direction*0.1;
            }
            if yspeed &gt; 0 
            {
                while place_meeting(x,y+yspeed,objSolid)
                or place_meeting(x,y+yspeed,prtMovingPlatformSolid)
                or (place_meeting(x,y+yspeed,objTopSolid) &amp;&amp; place_meeting(x,y,objTopSolid))
                or (place_meeting(x,y+yspeed,prtMovingPlatformJumpthrough) &amp;&amp; place_meeting(x,y,prtMovingPlatformJumpthrough))
                {
                    yspeed -= 0.1;
                }
            }
            else {
                if place_meeting(x,y+yspeed,objSolid) or place_meeting(x,y+yspeed,prtMovingPlatformSolid) {
                    yspeed = 0;
                }
            }
            if place_meeting(x,y+1,objSolid)
            or place_meeting(x,y+1,prtMovingPlatformSolid)
            or (place_meeting(x,y+1,objTopSolid) &amp;&amp; place_meeting(x,y,objTopSolid))
            or (place_meeting(x,y+1,prtMovingPlatformJumpthrough) &amp;&amp; place_meeting(x,y,prtMovingPlatformJumpthrough)) {
                xspeed = 0;
                yspeed = 5;
                timer = -10;
                image_index = 1;
                if Hops != -1
                {
                    Hops -= 1;
                }
                if Hops == 0 
                {
                    Hops = startHops;
                    Direction = -Direction;
                }
            }
        }
    }
    image_xscale = Direction;
}
else if dead
{
    image_index = 0;
    Active = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
