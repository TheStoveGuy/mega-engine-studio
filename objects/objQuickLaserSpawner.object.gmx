<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprQuickLaserSpawner</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtGimmick</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// variation = &lt;Number&gt; 0 = death, 1 = pain
// delay = &lt;Number&gt;
// laserspeed = &lt;Number&gt;
// dir = &lt;Number&gt; 1 = right, -1 = left, 2 = down, -2 = up

event_inherited();

respawn = true;
contactDamage = 28;

respawnRange = -1;
despawnRange = -1;

spawning = false;

global.hitTick = 0;

startDelay = 0;
active = false;

delay = 30;
laserspeed = 4;
variation = 1;

i = -1;

dir = 1;
alarm[0] = 1;

obj = objQuickLaser;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var z;

if dir = 1 or dir = -1
{
    if place_meeting(x+4,y,objSolid)
    {
        dir = -1;
    }
    if place_meeting(x-4,y,objSolid)
    {
        dir = 1;
    }
    
    z = instance_place(x,y,objSectionBorderHorizontal);
    if z {
        if z.x &lt; bbox_right {
            dir = 1;
        }
        if z.x &gt; bbox_left {
            dir = -1;
        }
    }
}
else
{
    if place_meeting(x,y+4,objSolid)
    {
        dir = -2;
    }
    if place_meeting(x,y-4,objSolid)
    {
        dir = 2;
    }
    
    z = instance_place(x,y,objSectionBorderVertical);
    if z {
        if z.y &lt; bbox_bottom {
            dir = 2;
        }
        if z.y &gt; bbox_top {
            dir = -2;
        }
    }
}

startDelay = delay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !dead &amp;&amp; !global.frozen &amp;&amp; !global.flashStopper &amp;&amp; insideSection(x+8,y+8)
{
    if delay &gt;= 0
    {
        delay -= 1;
        if delay == 0
        {
            active = true;
            playSFX(sfxQuickLaser);
        }
    }
    
    if active
    {
        if i = -1
        {
            if abs(dir) == 1
            {
                xx = 0;
                if dir = -1 {xx = 17;}
                i = instance_create(x+xx,y,obj);
                i.myspeed = laserspeed*dir;
                i.image_xscale = 0;
                i.contactDamage = contactDamage;
                i.variation = variation;
                i.vert = false;
            }
            else
            {
                yy = 0;
                if dir = -2 {yy = 17;}
                i = instance_create(x,y+yy,obj);
                i.myspeed = laserspeed*sign(dir);
                i.image_yscale = 0;
                i.contactDamage = contactDamage;
                i.variation = variation;
                i.vert = true;
            }
        }
    }
}
else if dead
{
    active = false;
    delay = startDelay;
    i = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///No
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
