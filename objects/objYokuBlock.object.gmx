<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprYokuBlockPreview</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtGimmick</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code (mandatory):
//startup = &lt;number&gt; (the amount of frames it takes for the Yoku Block to first appear)
//active = &lt;number&gt; (the amount of frames the Yoku Block is active before disappearing)
//wait = &lt;number&gt; (the amount of frames the Yoku Block needs to reappear after disappearing
//All of these creation code variables are mendatory; not adding them to the creation code will give you an error

//Creation code (optional):
//sprite = &lt;sprite name&gt; (to set the yoku block to have a custom graphic (you don't need to do this if you're creating objects that extend the yoku block templates though)
//neverDespawn = &lt;boolean&gt; (true = will reappear after disappearing for the first time (default); false = only appears once) (setting this to false will eliminate the need to set the wait variable)

//Note: Yoku Blocks appear and disappear regardless of whether they are on-screen or off-screen
//This is to prevent inconsistent timing, such as the ones in Heat Man's stage in MM2

event_inherited();

sprite_index = sprYokuBlock;

//creation code setup stuff
startup = 0;
active = 120;   
neverDespawn = true;
wait = 120;    
sprite = noone;
doSFX = true;

spike = false; //don't set creation code to make yoku spikes, use the objYokuSpike object

timer = 0;
phase = 0; //0 = waiting to appear; 1 = active; 2 = waiting to reappear after disappearing; 3 = inactive;
mySolid = -12;

respawnRange = -1;
despawnRange = -1;

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !neverDespawn { wait = -1; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    switch phase
    {
        case 0: //Waiting to appear
            //Timer
            timer += 1;
            if timer &gt;= startup
            {
                timer = 0;
                phase = 1;              
                image_index = 0;
                
                event_user(0); //shunt mega man
                
                if insideView() &amp;&amp; doSFX
                {
                    playSFX(sfxYokuBlock);
                }
            }
            break;
        case 1: //Active
            //have solid
            if (insideView())
            {
                visible = true;
                
                if (!instance_exists(mySolid))
                {
                    if (!spike)
                    {
                        mySolid = instance_create(x, y, objSolid);
                    }
                    else
                    {
                        mySolid = instance_create(x, y, objSpike);
                    }
                }
            }
            //Animation
            if image_index &lt; image_number - 1
            {
                image_speed = 0.25;
            }
            else
            {
                image_speed = 0;
                image_index = image_number - 1;
            }
            
            //Timer
            timer += 1;
            if timer &gt;= active
            {
                timer = 0;
                image_index = 0;
                
                if (neverDespawn)
                {
                    phase = 2;
                }
                else
                {
                    phase = 3; //set to inactive phase
                }
            }
            break;
        case 2: //Waiting to reappear after disappearing
            //Timer
            timer += 1;
            if timer &gt;= wait
            {
                timer = 0;
                phase = 1;
                image_index = 0;
                
                event_user(0); //shunt mega man
                
                if insideView() &amp;&amp; doSFX
                {
                    playSFX(sfxYokuBlock);
                }
            }
            
            break;
        case 3:
            //inactive
            break;
    }
}
else if dead
{
    phase = 0;
    timer = 0;
    image_speed = 0;
    image_index = 0;
    visible = false;
}

if (phase != 1)
{
    visible = false;
    if (instance_exists(mySolid))
    {
        with mySolid instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shunt megaman</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!spike) //don't need to shunt if it's a spike, since mega man gunna die
{
    if place_meeting(x,y,target)
    {
        var xx,yy;
        xx = 0;
        yy = -global.GravityDir;
        
        size = (target.bbox_bottom-target.bbox_top)*yy;
        
        if place_meeting(x,y+size,objSolid)
        or place_meeting(x,y+size,prtMovingPlatformSolid)
        {
            yy = 0;
            
            size = target.bbox_right-target.bbox_left;
            
            if !place_meeting(x+size,y,objSolid)
            &amp;&amp; !place_meeting(x+size,y,prtMovingPlatformSolid)
            {
                xx = 1;
            }
            else
            {
                if !place_meeting(x-size,y,objSolid)
                &amp;&amp; !place_meeting(x-size,y,prtMovingPlatformSolid)
                {
                    xx = -1;
                }
                else {exit;}
            }
        }
        
        with target
        {
            if yy != 0
            {
                y = round(y);
                ground = true;
                yspeed = 0;
            }
            while place_meeting(x,y,other.id)
            {
                x += xx;
                y += yy;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//default yoku spike sprite
if (spike &amp;&amp; sprite == noone &amp;&amp; (sprite_index == sprYokuBlock || sprite_index == sprYokuBlockPreview))
{
    sprite_index = sprYokuSpike;
}

//custom sprite using sprite variable (for sake of compatability after studio port)
if ((sprite_index == sprYokuBlock || sprite_index == sprYokuBlockPreview) &amp;&amp; sprite != noone)
{
    sprite_index = sprite;
}

if (sprite == noone)
{
    if (sprite_index == sprYokuBlockPreview)
    {
        //default yoku block sprite
        sprite_index = sprYokuBlock;
    }
    else
    {
        //custom sprite was set using sprite_index instead
        //don't do anything actually
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
