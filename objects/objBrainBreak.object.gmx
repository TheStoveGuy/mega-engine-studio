<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBrainBreak</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 4;

//Enemy specific code
phase = 0;
smokeTimer = 0;
explodeTimer = 0;

xSpd = 1.2;
jumpXSpd = 0;
ySpd = 5;
xspeed = 0;
yspeed = 0;

imgSpd = 0.1;
imgIndex = 0;
animBack = false;

image_speed = 0;
image_index = 0;

calibrateDirection();

//stores the weapon damage values
wpndmg[0] = 1; //Mega Buster
wpndmg[1] = 1; //Mega Buster Charge1
wpndmg[2] = 1; //Mega Buster Charge2
wpndmg[3] = 1; //Weapon Explosion
wpndmg[4] = 2; //HornetChaser
wpndmg[5] = 1; //JewelSatellite
wpndmg[6] = 1; //GrabBuster
wpndmg[7] = 1; //TripleBlade
wpndmg[8] = 1; //WheelCutter
wpndmg[9] = 1; //SlashClaw
wpndmg[10] = 1; //Sakugarne
wpndmg[11] = 1; //SuperArrow
wpndmg[12] = 1; //WireAdapter
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    checkGround();
    gravityCheckGround();
    generalCollision();
    
    x += xspeed;
    y += yspeed;
    
    switch (phase)
    {
        case 0: //start facing the player
            xspeed = xSpd*image_xscale;
            phase = 1;
            break;
        case 1: //walk around casually
            //animation
            if (!animBack)
            {
                imgIndex += imgSpd;
                if (imgIndex &gt;= 3){
                    imgIndex = 2 - imgIndex mod 3;
                    animBack = true;
                }
            }
            else
            {
                imgIndex -= imgSpd;
                if (imgIndex &lt;= 0){
                    imgIndex = 1 - imgIndex;
                    animBack = false;
                }
            }
            
            //turn around
            if ground
            {
                if (xspeed == 0 || !place_meeting(x + sprite_width * 0.8 + xspeed, bbox_bottom+1, objSolid))
                {
                    image_xscale*=-1;
                    xspeed*=-1;
                }
            }
            
            if healthpoints == 1
            {
                phase = 2;
                imgIndex = 3;
                animBack = false;
                calibrateDirection();
                instance_create(x, y, objBrainBreakGlasses);
            }
            break;
        case 2: //ATTACK THE SHIT OUTA MEGA MEONG BWOBWOBWOBWOBWOBWO
            //animation
            if (!animBack)
            {
                imgIndex += imgSpd * 2;
                if (imgIndex &gt;= 6)
                {
                    imgIndex = 5 - imgIndex mod 6;
                    animBack = true;
                }
            }
            else
            {
                imgIndex -= imgSpd * 2;
                if (imgIndex &lt;= 3)
                {
                    imgIndex = 4; //Not sure how to carry over the extra value. Oh well.
                    animBack = false;
                }
            }
            
            //give off smoke
            smokeTimer += 1;
            if (smokeTimer &gt;= 8) //&lt;-- smoke spawn time here
            {
                smokeTimer = 0;
                instance_create(x-sprite_width*0.4,bbox_top+8,objBrainBreakSmoke);
            }
            
            //turn around stuff
            if ground &amp;&amp; instance_exists(target)
            {
                if (xspeed == 0 || !place_meeting(x + sprite_width * 0.75 + xspeed, bbox_bottom + 1, objSolid))
                {
                    if (image_xscale &gt; 0 &amp;&amp; target.x &lt; x) || (image_xscale &lt; 0 &amp;&amp; target.x &gt; x)
                    {
                        image_xscale*=-1;
                    }
                    else
                    {
                        yspeed = -ySpd;
                        xSpeedAim(target, yspeed, gravAccel);
                        ground = false;
                        if abs(xspeed) &gt; xSpd
                        {
                            xspeed = xSpd * image_xscale;
                        }
                        jumpXSpd = xspeed;
                    }
                }
            }
            
            //set speed
            if (ground)
            {
                xspeed = xSpd*2*image_xscale;
            }
            else
            {
                xspeed = jumpXSpd; //so he can't be completely unable to jump over walls and stuff
            }
            
            //explode
            explodeTimer += 1;
            if explodeTimer &gt;= 800 //&lt;-- time until exploding here
            {
                dead = true;
                visible = 0;
                instance_create(bbox_get_xcenter(),bbox_get_ycenter(),objHarmfulExplosion);
            }
            break;
    }
}
else if dead
{
    calibrateDirection();
    phase = 0;
    
    smokeTimer = 0;
    explodeTimer = 0;
    imgIndex = 0;
    animBack = false;
}

image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
