<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprQuickMan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthIndex = 1;
healthpointsStart = 28;
healthpoints = healthpointsStart;

ground = false;

pose = sprQuickManPose;
poseImgSpeed = 12/60;
image_index = 13;

contactDamage = 4;

phase = 0;
phaseTimer = 0;
xDistanceTravelled = 0;
has_fired = false;
jump_count = 0;
bug_active = false;

// tailor these variables at your leisure:

run_speed = 3;
run_time = 60;

// sometimes doesn't jump a full 3 times
ai_bug = false;

// how high Quick Man jumps:
jump_height_for[0] = 32;
jump_height_for[1] = 96;
jump_height_for[2] = 128

// affects where Quick Man tries to land next to Mega Man
jump_x_offset[0] = -32;
jump_x_offset[1] = 0;
jump_x_offset[2] = 32;

//stores the weapon damage values
wpndmg[0] = 2; //Mega Buster
wpndmg[1] = 2; //Mega Buster Charge1
wpndmg[2] = 3; //Mega Buster Charge2
wpndmg[3] = 3; //Weapon Explosion
wpndmg[4] = 1; //HornetChaser
wpndmg[5] = 2; //JewelSatellite
wpndmg[6] = 1; //GrabBuster
wpndmg[7] = 3; //TripleBlade
wpndmg[8] = 2; //WheelCutter
wpndmg[9] = 2; //SlashClaw
wpndmg[10] = 1; //Sakugarne
wpndmg[11] = 1; //SuperArrow
wpndmg[12] = 4; //WireAdapter
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !global.flashStopper
{
    if isFight {
        image_speed = 0;
        sprite_index = sprQuickMan;
        
        checkGround();
        gravityCheckGround();
        
        startPhase = phase
        
        switch phase {
            case 0: // jump at Mega Man
                // AI bug:
                if bug_active {
                    image_index = 13;
                    if place_meeting(x,y,objSolid) {
                        y -= 16; // simulate getting out depends on height of jump selected
                        if irandom(2) == 2 { // simulate random jump height select
                            jump_count += 1;
                            has_fired = false;
                        }
                        jump_count += 1;
                        playSFX(sfxLand);
                    } else
                        bug_active = false;
                    
                    // abort if jumping too many times -- don't want to jump out of arena!
                    if jump_count &gt; 3 {
                        bug_active = false;
                        phase = 1;
                    }
                    
                    if bug_active
                        break;
                }
                
                // normal:
                if phaseTimer == 0 {
                    jump_count += 1;
                    image_index = 13;
                    
                    // turn to face Mega Man:
                    if instance_exists(target) {
                        image_xscale = 1;
                        if x &gt; target.x
                            image_xscale = -1;
                    }
                    
                    jump_type = irandom(2); // 0: small, 1: medium, 2: high
                    
                    // doesn't perform small jump if Mega Man is too far away:
                    if instance_exists(target)
                        if abs(target.x - x) &gt; 120 &amp;&amp; jump_type == 0
                            jump_type = 1;
                    
                    var jump_height, x_start, x_end, x_displacement;
                    
                    // calculate yspeed:
                    jump_height = jump_height_for[jump_type]
                    
                    // velocity required to reach jump height derived with kinematics equations:
                    yspeed = -sqrt(abs(2*gravAccel*jump_height))
                    airtime = abs(2*yspeed/gravAccel)
                    
                    // calculate xspeed:
                    x_start = x;
                    if instance_exists(target)
                        x_end = target.x + jump_x_offset[jump_type]*image_xscale
                    else
                        x_end = x;
                    
                    x_displacement = x_end - x_start;
                    pref_xspeed = x_displacement / airtime;
                } else if ground {
                    // landed; restart jump (or next phase after three jumps)
                    playSFX(sfxLand);
                    if jump_count &gt;= 3 {
                        // next phase (running)
                        jump_count = 0;
                        phase = 1;
                        has_fired = false;
                    } else {
                        // restart jump
                        startPhase = -1;
                    }
                }
                
                // fire bullets at Mega Man:
                if jump_count == 2 &amp;&amp; !has_fired &amp;&amp; yspeed &gt;= 0 &amp;&amp; instance_exists(target) {
                    has_fired = true;
                    // set shooting sprite:
                    image_index = 14;
                    // fire bullet:
                    var i;
                    for (i=0;i&lt;3;i+=1) {
                        with instance_create(x,y,objQuickManBoomerang) {
                            var dir, target_x, target_y;
                            dir = point_direction(x,y,target.x,target.y)
                            xspeed = cos(degtorad(dir)) * _speed * (0.5+i/2);
                            yspeed = -sin(degtorad(dir)) * _speed;
                            dist = point_distance(x,y,x + (target.x - x) * (0.5 + i/2),target.y) + 48
                        }
                    }
                }
                
                xspeed = pref_xspeed;
                
                break;
            case 1: // Run for 1 second:
                if phaseTimer == 0 {
                    // turn to face Mega Man:
                   if instance_exists(target) {
                      image_xscale = 1;
                      if x &gt; target.x
                        image_xscale = -1;
                    }
                }
                xspeed = run_speed*image_xscale
                
                // hop over small obstacle:
                if place_meeting(x+xspeed,y+yspeed,objSolid) &amp;&amp; !place_meeting(x,y+yspeed,objSolid) // obstacle in front?
                    &amp;&amp; !place_meeting(x+xspeed,y+yspeed-6,objSolid) &amp;&amp; !place_meeting(x,y-6,objSolid) { // no obstacle in desired place to move to?
                    // adjust position slightly:
                    y-=6;
                }
                
                xDistanceTravelled += abs(xspeed)
                image_index = 8 + (xDistanceTravelled div 10) mod 4
                if phaseTimer &gt; run_time {
                    phase = 0;
                    
                    // trigger AI bug:
                    if ai_bug // sometimes jumps fewer times
                        // must be next to a tall wall to trigger:
                        if place_meeting(x+xspeed*1.5,y-20,objSolid) {
                            bug_active = true;
                            y += 16; //sink into floor
                        }
                }
            break;
        }
        
        if !bug_active {
            generalCollision();            
            x += xspeed;
            y += yspeed;
        }
        
        phaseTimer += 1;
        
        // check if phase has changed and reset some variables        
        if phase != startPhase {
          phaseTimer = 0;
        }
        
    }
}

// flash stopper drains Quick Man's health:
if global.flashStopper &amp;&amp;! global.frozen {
    global.bossHealth[1] -= 1/30
    if global.bossHealth[1] &lt;= 0
        event_user(10);
    // flash stopper drains extra fast:
    with objFlashStopper
        phase -= 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
