<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJamacy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 2;

//Enemy specific code
image_speed = 0.1;

climbing = 0;
ground = 1;
calibrated = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper {
    //Set direction
    if !calibrated {
        if instance_exists(target) {
            calibrateDirection();
            calibrated = 1;
        }
    }
    //Dismount Ladder
    if climbing {
        yspeed = 1.5;
        if !place_meeting(x,y,objLadder) {
            climbing = 0;
            sprite_index = sprJamacy;
            yspeed = 0;
        }
    }
    //Mount Ladder
    else if !(position_meeting(round(bbox_left)+abs(xspeed),bbox_bottom+1,objSolid) &amp;&amp; position_meeting(round(bbox_right)-abs(xspeed),bbox_bottom+1,objSolid)) {
        if (position_meeting(round(bbox_left)+abs(xspeed),bbox_bottom+1,objLadder) &amp;&amp; position_meeting(round(bbox_right)-abs(xspeed),bbox_bottom+1,objLadder)) {
            climbing = 1;
            y+=1;
            sprite_index = sprJamacyClimbing;
            yspeed = 1.5;
        }
    }
    //Set speed
    if !ground or climbing {
        xspeed = 0;
    }
    else {xspeed = image_xscale*1.5;}
    //Collision / Movement
    if !climbing {
        gravityCheckGround();
    }
    else {checkGround();}
    generalCollisionTurnaround();
    checkGround();
    x+=xspeed;
    y+=yspeed;
    //Get from ladder on ground
    if climbing {
        if ground &amp;&amp; yspeed = 0 {
            climbing = 0;
            sprite_index = sprJamacy;
        }
    }
}
else if dead {
    calibrated = 0;
    climbing = 0;
    xspeed = 0;
    yspeed = 0;
    sprite_index = sprJamacy;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
