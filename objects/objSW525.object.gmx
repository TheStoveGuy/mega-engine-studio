<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSW252</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//creation code (all optional)
//startDir = &lt;number&gt; (1 = starts rightside up; -1 = starts upside down (default) )

event_inherited();

respawn = true;

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;

//Enemy specific code
startDir = -1;
image_yscale = startDir;
gravityDir = startDir;
init = 1;

phase = 0;
explodeWait = 350;
explodeWaitExtra = 30; //&lt;-- for the extra time to play the animation
explodeTimer = 0;
trackRange = 20;

spd = 1.4;

imgSpd = 0.2;
imgIndex = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if init
{
    init = 0;
    image_yscale = startDir;
    gravityDir = startDir;
}

event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{   
    checkGroundExt(gravityDir);
    gravityCheckGroundExt(gravityDir * gravAccel);
    generalCollisionExt(gravityDir);
    
    x += xspeed;
    y += yspeed;
    
    switch (phase){
        //start facing mega man
        case 0:
            calibrateDirection();
            phase = 1;
            xspeed = spd * image_xscale;
            break;
        
        //wait
        case 1:
            explodeTimer += 1;
            if (explodeTimer &lt; explodeWait &amp;&amp; ground){
                //animation
                imgIndex += imgSpd;
                if (imgIndex &gt;= 5)
                {
                    imgIndex = 0;
                }
                
                //gravity switch stuff
                if instance_exists(target)
                {
                    if (target.image_yscale != image_yscale &amp;&amp; target.bbox_left &lt; bbox_right &amp;&amp; target.bbox_right &gt; bbox_left){
                        gravityDir = -gravityDir;
                        image_yscale = -image_yscale;
                    }
                }
                
                //turn around stuff
                turn = false;
                if (xspeed == 0)
                {
                    turn = true
                }
                
                if (instance_exists(target))
                {
                    if ((image_xscale &lt; 0 &amp;&amp; x &lt; target.x - trackRange) || (image_xscale &gt; 0 &amp;&amp; x &gt; target.x + trackRange)){
                        turn = true;
                    }
                }
                
                if (turn)
                {
                    image_xscale = -image_xscale;
                }
                
                xspeed = spd * image_xscale;
            }
            else
            {
                xspeed = 0;
                
                //animation
                imgIndex += imgSpd * 3;
                if (explodeTimer &lt; explodeWait + explodeWaitExtra &amp;&amp; imgIndex &gt;= 6){
                    imgIndex = 4;
                }
                
                if (explodeTimer &lt; explodeWait + explodeWaitExtra * 2 &amp;&amp; imgIndex &gt;= 7){
                    imgIndex = 5;
                }
                
                //self destruct
                if (explodeTimer &gt;= explodeWait + explodeWaitExtra * 2){
                    instance_create(x, y, objHarmfulExplosion);
                    
                    healthpoints = 0;
                    event_user(10);
                    
                    playSFX(sfxExplosion2);
                }
            }
            
            if !ground {xspeed = 0;}
            
            break;
    }
}
else if dead
{
    phase = 0;
    explodeTimer = 0;
    xspeed = 0;
    yspeed = 0;
    imgIndex = 0;
}

image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
