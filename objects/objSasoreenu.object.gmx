<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSasoreenu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-12</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code (all optional):

depth = 0; //so it hides behind the quicksand, but is still visible above the quicksand in the editor

event_inherited();

respawn = true;

healthpointsStart = 4;
healthpoints = healthpointsStart;
contactDamage = 4;


//Enemy specific code
xspeed = 0;
yspeed = 0;

animTimer = 0;
inQuicksand = false;
sink = false;

image_speed = 0;
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    if !inQuicksand
    {
        checkGround();
        generalCollision();
        gravityCheckGround();
    }
    
    animTimer += 1;
    if animTimer == (6/(inQuicksand+1))
    {
        animTimer = 0;
        if inQuicksand
        {
            if image_index == 2 { image_index = 3; }
            else if image_index == 3 { image_index = 4; }
            else if image_index == 4 { image_index = 5; }
            else { image_index = 2; }
        }
        else
        {
            if image_index == 1 { image_index = 0; }
            else { image_index = 1; }
        }
    }
    
    if place_meeting(x,y,objQuickSand)
    and sink == false
    {
        calibrateDirection();
        inQuicksand = true;
        yspeed = -1.5;
        xspeed = 0;
    }
    else
    if sink == false
    {
        if place_meeting(x+xspeed*4,y,objSolid)
        and place_meeting(x,y+1,objQuickSand)
            {
            sink = true;
            yspeed = 1.5;
            image_index = 2;
            animTimer = 0;
            }
        else
        if xspeed == 0 {xspeed = choose(0.75,1.5)*image_xscale;}
        if yspeed &lt; 0 { yspeed = 0; }
        if !place_meeting(x+xspeed*2,y,objSolid)
            inQuicksand = false;
    }
    else
    {
        xspeed = 0;
        inQuicksand = true;
        if yspeed == 0
            dead = true;
        yspeed = 1.5;
    }
    
    if inQuicksand and animTimer &gt; 3 { animTimer = 3; }
    
    x += xspeed;
    y += yspeed;
}
else
{
    image_speed = 0;
    animTimer = 0;
    if dead 
    {
        image_index = 0;
        inQuicksand = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
