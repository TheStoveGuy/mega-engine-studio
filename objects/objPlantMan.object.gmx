<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlantIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>sprPlantMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthIndex = 1;

healthpointsStart = 28;
healthpoints = healthpointsStart;

pose = sprPlantIntro;
poseImgSpeed = 10/60;
contactDamage = 4;

ground = false;
attackTimer = 0;

// rather than using game maker's image offset features, this time round we're building a more accurate animation system.
imageTimer = 0;
imageTimerMax = 99;
// this is the minmum image_indexs of plant man for any given animation. imageNoMin is what the image_index is set to when plant man has finished an animation.
imageNoMin = 0;

phase = 0; 

jumpY = -8;
walkX = 2.5;

delay = 0;
guard = 0;

// plant man has a bit of randomised timing shenangians going on. this variable sets it.
randomize();
randomiser = irandom_range(1,4);

//stores the weapon damage values
wpndmg[0] = 1; //Mega Buster
wpndmg[1] = 1; //Mega Buster Charge1
wpndmg[2] = 3; //Mega Buster Charge2
wpndmg[3] = 1; //Weapon Explosion
wpndmg[4] = 0; //HornetChaser
wpndmg[5] = 0; //JewelSatellite
wpndmg[6] = 3; //GrabBuster
wpndmg[7] = 3; //TripleBlade
wpndmg[8] = 1; //WheelCutter
wpndmg[9] = 2; //SlashClaw
wpndmg[10] = 3; //Sakugarne
wpndmg[11] = 2; //SuperArrow
wpndmg[12] = 2; //WireAdapter

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if global.frozen == false
{
    if isFight == true
    {
        x += xspeed;
        y += yspeed;
        image_speed = 0;
        checkGround();
        gravityCheckGround();
        generalCollision();
        
        // resets the image timer if plant man ever changes poses
        if pose != sprite_index
            {
            pose = sprite_index;
            imageTimer = 0;
            }
        
        attackTimer += 1;
        if delay &gt; 0
            delay -= 1;
        imageTimer += 1;
        if imageTimer &gt;= imageTimerMax &amp;&amp; image_index &lt; image_number-1
        {
            imageTimer = 0;
            image_index += 1;
        }
        if imageTimer &gt;= imageTimerMax &amp;&amp; image_index == image_number-1
        {
            imageTimer = 0;
            image_index = imageNoMin;
        }
        switch phase
            {
            case 0: // idle - begin animation and play generate plant barrier animation
            // setup animation for this sprite index.
                xspeed = 0;
                randomiser = irandom_range(1,3);
                sprite_index = sprPlantGeneratePlantBarrier;
                imageNoMin = 0;
                imageTimerMax = 2;
                if attackTimer &gt;= 6 
                    {
                    phase = 1;
                    attackTimer = 0;
                    }
            break;
            
            case 1: // generate plant barrier // pre jump
            if !instance_exists(objPlantBarrier)
            {
                guard = 1;
                var i;
                for (i=0;i &lt; 4; i +=1)
                {
                    WS = instance_create(x,y,objPlantBarrier);
                    WS.cAngle = degtorad(90*i);
                    WS.image_xscale = image_xscale;
                }
            }
            
            if attackTimer &lt;= 9
            {
                sprite_index = sprPlantIdle;
                imageTimerMax = 9999;
            }
            
            if attackTimer == 10 //which direction plant man jumps in is determined randomly. i think.
                {
                if randomiser mod 2 == 0
                    image_xscale = -1;
                else
                    image_xscale = 1;
                }
                    
            if attackTimer &gt; 9
                {
                sprite_index = sprPlantGeneratePlantBarrier;
                image_index = 1;
                }
                
            if attackTimer &gt;= 18
                    {
                    randomiser = irandom_range(1,3);
                    phase = 2;
                    attackTimer = 0;
                    }
            break;
            
            case 2: // jump!
            
                xspeed = walkX * image_xscale; 
                yspeed = jumpY + randomiser;
                sprite_index = sprPlantJump;
                delay = 5;
                phase = 3;
            break;   
                
            case 3: // rebound off wall and land.
                if xspeed = 0
                    {
                    image_xscale = image_xscale * -1;
                    xspeed = walkX * image_xscale; 
                    }
                if ground == true &amp;&amp; delay == 0
                    {
                    // setup next phase - face mega man and play throwing sound effect.
                    playSFX(sfxEnemyShoot);
                    calibrateDirection();
                    phase = 4;
                    }
            break;
            
            case 4: // throw plant barrier!
                guard = 0;
                sprite_index = sprPlantThrow;
                xspeed = 0;
                var plantXS;
                plantXS = image_xscale;
                with objPlantBarrier
                    xspeed = 2 * plantXS;
                if !instance_exists(objPlantBarrier)
                    phase = 5;
            break;
            
            case 5: // walk towards mega man
                if instance_exists(target) 
                    {
                    if sprite_index != sprPlantWalk
                        {
                        calibrateDirection();
                        sprite_index = sprPlantWalk;
                        xspeed = walkX * image_xscale;
                        imageNoMin = 0;
                        imageTimerMax = 4;
                        }
                    if (image_xscale = 1 &amp;&amp; x &gt;= target.x) or (image_xscale = -1 &amp;&amp; x &lt;= target.x)
                        {
                        attackTimer = 0;
                        phase = 0;
                        }
                    }
                else
                    {
                    attackTimer = 0;
                    phase = 0;
                    }
     
            }
    }
}
else
{
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if guard
{
    other.guardcancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
