<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFootholder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtMovingPlatformSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_speed = 0.3;

startingXDirection = -1;
xSpeed = -0.75;
startingYDirection = -1;
ySpeed = 0.1;
init = 1;

alarmturn = 120;

respawn = true;

respawnRange = -1;
despawnRange = -1;

variation = 1;

tempYspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if init
{
    init = 0;
    if startingXDirection == -1
    {
        xSpeed = -0.75;
    }
    else {xSpeed = 0.75;}
    
    if startingYDirection == -1
    {
        ySpeed = -0.1;
    }
    else {ySpeed = 0.1;}
}

event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{    
    ySpeed = sign(ySpeed) * 0.1;
    tempYspeed += ySpeed;
    
    if tempYspeed &lt; 0 {
        while tempYspeed &lt;= -1 {
            tempYspeed += 1;
            ySpeed = -1;
        }
    }
    else {
        while tempYspeed &gt;= 1 {
            tempYspeed -= 1;
            ySpeed = 1;
        }
    }
    
    xspeed = xSpeed;
    if ySpeed &gt;= 1 || ySpeed &lt;= -1
    {
        yspeed = ySpeed;
    }
    else
    {
        yspeed = 0;
    }
    
    if alarmturn &gt; 0 {alarmturn -= 1;}
    if alarmturn == 0
    {
        if variation == 2
        {
            playSFX(sfxEnemyShootClassic);
            a = instance_create(x,y,objEnemyBullet);
            a.xspeed = -3;
            a.yspeed = 0;
            a.sprite_index = sprMM1MetBullet;
            a = instance_create(x+sprite_width-4,y,objEnemyBullet);
            a.xspeed = 3;
            a.yspeed = 0; 
            a.sprite_index = sprMM1MetBullet; 
        }
        alarmturn = 120;
        xspeed = -xspeed;
        xSpeed = -xSpeed;
        if collision_rectangle(x,y-48,x+1,y+48,objSolid,false,true) or (y &lt;= view_yview[0]+48 &amp;&amp; ySpeed &lt; 0) or (y &gt;= view_yview[0]+224-48 &amp;&amp; ySpeed &gt; 0)
        {
            yspeed = -yspeed;
            ySpeed = -ySpeed;
            tempYspeed = 0;
        }
    }
}
else if dead
{
    xspeed = 0;
    yspeed = 0;
    x = xstart;
    y = ystart;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
