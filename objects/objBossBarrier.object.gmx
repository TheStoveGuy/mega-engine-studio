<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMiniBossBarrier</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>objTopSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>issolid = true;

delay = 32;
active = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Connects the objSolids together to minimize object usage
// 2/2 (vertical)

if place_meeting(x,y-4,object_index) {
    if instance_place(x,y-4,object_index).object_index = object_index
    &amp;&amp; instance_place(x,y-4,object_index).image_xscale = image_xscale {exit;}
}

while (place_meeting(x,y+4,object_index)) {
    var nextobjSolid;
    nextobjSolid = instance_place(x,y+4,object_index);
    if nextobjSolid.object_index != object_index {exit;}
    if nextobjSolid.x = x &amp;&amp; nextobjSolid.image_xscale = image_xscale {
        with nextobjSolid {instance_destroy();}
    }
    else {exit;}
    image_yscale += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !instance_exists(objSectionSwitcher)
{
    bossthere = 0;
    if instance_exists(prtBoss)
    or instance_exists(prtMiniBoss)
    {
        bossthere = 1;
    }
    
    if active
    {
        if bossthere
        {
            delay = 24;
        }
        else if insideView()
        {
            delay -= 1;
            if !delay
            {
                event_user(0);
            }
        }
    }
    
    with objMegaman
    {
        while place_meeting(x,y,other.id)
        {
            with other
            {
                if other.bbox_top &gt;= bbox_bottom
                {
                    other.y += 1;
                    if yspeed*global.GravityDir &lt; 0
                    {
                        yspeed = 0;
                    }
                }
                else if other.bbox_bottom &lt;= bbox_top
                {
                    other.y -= 1;
                }
                else if other.x &lt; x+(sprite_width/2)
                {
                    other.x -= 1;
                }
                else
                {
                    other.x += 1;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Connects the objSolids together to minimize object usage
// 1/2 (horizontal)

if object_index != objBossBarrier {exit;}

alarm[0] = 1;

if place_meeting(x-4,y,object_index) 
{
    if instance_place(x-4,y,object_index).object_index = object_index {exit;}
}

while (instance_place(x+4,y,object_index)) {
    var nextobjSolid; 
    nextobjSolid = instance_place(x+4,y,object_index);
    if nextobjSolid.object_index != object_index {exit;}
    with nextobjSolid {instance_destroy();}
    image_xscale += 1;
    while place_meeting(x,y,object_index) {
        if instance_place(x,y,object_index).object_index = object_index {
            with instance_place(x,y,object_index) {instance_destroy();}
        }
        else {break;}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i=0;i&lt;image_xscale;i+=1) // X
for(j=0;j&lt;image_yscale;j+=1) // Y
{
    if tile_layer_find(1000000,x+i*16,y+j*16)
    {
        tile_layer_delete_at(1000000,x+i*16,y+j*16);
        instance_create(x+8+i*16,y+8+j*16,objExplosion);
    }
    
    while collision_rectangle(bbox_left+8,bbox_top+8,bbox_right-8,bbox_bottom-8,objSolid,1,1) //Now delete it
    {
        with collision_rectangle(bbox_left+8,bbox_top+8,bbox_right-8,bbox_bottom-8,objSolid,1,1)
        {
            if image_xscale &gt; 1 or image_yscale &gt; 1
            {
                event_user(15);
            }
            else {instance_destroy();}
        }
    }
    
    while collision_rectangle(bbox_left+8,bbox_top+8,bbox_right-8,bbox_bottom-8,objBossDoor,1,1) //Now delete the boss door
    {
        with collision_rectangle(bbox_left+8,bbox_top+8,bbox_right-8,bbox_bottom-8,objBossDoor,1,1)
        {
            instance_destroy();
        }
    }
}

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
