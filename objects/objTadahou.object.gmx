<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTadahouPurple</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//creation code (all optional)
//col = &lt;number&gt; (

event_inherited();

respawn = true;

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 3;

//Enemy specific code
col = 0;
init = 1;

phase = 0;
shootWait = 160;
turnAroundWaitDiff = 40;
shootTimer = 0;
prevGround = true;

imgSpd = 0.1;
imgIndex = 0;

calibrateDirection();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if init
{
    init = 0;
    switch (col)
    {
        case 0: sprite_index = sprTadahouPurple;    break;
        case 1: sprite_index = sprTadahouBlue;      break;
        case 2: sprite_index = sprTadahouLightBlue; break;
    }
}

event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{   
    checkGround();
    gravityCheckGround();
    generalCollision();
    
    calibrateDirection();
    
    x += xspeed;
    y += yspeed
    
    if (shootTimer == shootWait)
    {
        shot = instance_create(x + sprite_width * 0.4, y - 4, objEnemyBullet);
        shot.xspeed = 1.4 * image_xscale; //&lt;-- bullet speed here
        shot.contactDamage = 3; //&lt;-- bullet damage here
        
        switch (col)
        {
            case 0: shot.sprite_index = sprTadahouShotPurple;    break;
            case 1: shot.sprite_index = sprTadahouShotBlue;      break;
            case 2: shot.sprite_index = sprTadahouShotLightBlue; break;
        }
        
        playSFX(sfxEnemyShoot);
        
        imgIndex = 1;
        
        shootTimer += 1;
    }
    else if (shootTimer &lt; shootWait)
    {
        shootTimer += 1;
    }
    
    if (shootTimer &gt;= shootWait + 1)
    {
        imgIndex += imgSpd;
        if (imgIndex &gt;= 2)
        {
            imgIndex = 0;
            shootTimer = 0;
        }
    }
    else
    {
        if (ground &amp;&amp; !prevGround){
            imgIndex = 2;
        }
    }
    if (shootTimer == shootWait - turnAroundWaitDiff){ //&lt;-- time until facing the player here
        calibrateDirection();
    }
    //animate landing on spring/ground/whatever
    if (imgIndex &gt;= 2)
    {
        imgIndex += imgSpd;
        if (imgIndex &gt;= 3)
        {
            imgIndex = 0;
        }
    }
    prevGround = ground;
}
else if dead 
{
    shootTimer = 0;
    xspeed = 0;
    yspeed = 0;
    imgIndex = 0;
    calibrateDirection();
}

image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
