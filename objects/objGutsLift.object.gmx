<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGutsLift</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtMovingPlatformJumpthrough</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_speed = 0;

issolid = true;

startingDirection = -1;
xSpeed = -1
init = 1;

respawn = true;

respawnRange = -1;
despawnRange = -1;

lastlift = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if init
{
    init = 0;
    if startingDirection == -1
    {
        xSpeed = -1;
    }
    else {xSpeed = 1;}
}

event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    liftend = collision_rectangle(x,y,x+8,y+(sprite_height/3),objLiftEnd,false,false);
    
    if (collision_rectangle(x,y,x+8,y+(sprite_height/3),objLiftRail,false,false)) 
    or (collision_rectangle(x,y,x+8,y+14,objLiftHole,false,false))
    {
        if collision_rectangle(x,y,x+8,y+(sprite_height/3),objLiftRail,false,false) {
            LiftRail = collision_rectangle(x,y,x+8,y+(sprite_height/3),objLiftRail,false,false);
        }
        else if collision_rectangle(x,y,x+8,y+14,objLiftHole,false,false) {
            LiftRail = collision_rectangle(x,y,x+8,y+14,objLiftHole,false,false);
        }
        else {
            LiftRail = noone;
        }
        if xspeed = 0 {xspeed = xSpeed;}
        if !liftend {
            if y &gt; LiftRail.y+1 {
                yspeed = -1;
            }
            else if y &lt; LiftRail.y-1 {
                yspeed = 1;
            }
            else {
                yspeed = 0;
            }
        }
    }
    else {
        gravityNoGround();
    }
    
    if (liftend &amp;&amp; liftend != lastlift) {
        lastlift = liftend;
        xspeed = -xspeed;
        if yspeed != 0 {
            yspeed = -yspeed;
        } 
    }
    if (collision_rectangle(x,y,x+8,y+14,objLiftHole,false,false)) {
        image_index = 2;
        issolid = false;
    }
    else if (collision_rectangle(x-4,y,x+12,y+14,objLiftHole,false,false)) {
        image_index = 1;
    }
    else {
        image_index = 0;
        issolid = true;
    }
}
else if dead
{
    xspeed = 0;
    yspeed = 0;
    lastlift = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
