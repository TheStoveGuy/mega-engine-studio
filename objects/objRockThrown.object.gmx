<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRockThrown</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code (all optional):
//col = &lt;number&gt; (0 = green(default); 1 = red; 2 = orange; )  

event_inherited();

respawn = true;

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 4;

//Enemy specific code
calibrateDirection()

hasFired=false;
imageOffset=0;
imageTimer=0;
imageTimerMax=12;

objectThrown=objThrownRock;

col = 0;

//stores the weapon damage values
wpndmg[4] = 3; //HornetChaser
wpndmg[5] = 3; //JewelSatellite
wpndmg[6] = 3; //JewelSatellite
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
image_index=(5*col)+imageOffset;
if global.frozen == false &amp;&amp; dead == false &amp;&amp; global.flashStopper == false
{
    calibrateDirection()
    checkGround();
    gravityCheckGround();
    generalCollision();
    x += xspeed;
    y += yspeed;
        
    imageTimer += 1;
       
    if imageTimer == imageTimerMax &amp;&amp; imageOffset &lt; 4
        {
        imageOffset += 1;
        imageTimer=0;
        imageTimerMax=12;
        }
    else if imageTimer == imageTimerMax &amp;&amp; imageOffset == 4
        {
        imageOffset = 0;
        imageTimer=0;
        hasFired=false;
        }
        var ID;
        if imageOffset == 3 &amp;&amp; hasFired == false
            {
            hasFired = true;
            imageTimerMax=16;
         var ID;
                ID = instance_create(x+image_xscale, sprite_get_ycenter()-4, objectThrown);
                {
                    ID.xscale = image_xscale;
                    ID.col = col;
                }
            }
        
            

        
      
}
else if dead == true
{
    calibrateDirection()
    xspeed = 0;
    yspeed = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
