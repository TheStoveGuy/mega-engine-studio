<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMegaman</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>mskMegaman</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>frozen = 0;

//co-op variables:
player_id = 0;
xspeed = 0
yspeed = 0
fanoutDistance = 0;
//flyObj = 0;

//Physics variables
grav = 0.25; //The player's gravity
gravfactor = 1;
gravWater = 0.38 * grav; //The player's gravity in water
jumpSpeed = 4.75 + grav*2;  //Dunno why grav needs to be multiplied by 2, but MM jumps as high as in MM5 when doing so
jumpSpeedWater = 4.85 + grav*2;
//walkSpeed = 1.296875;
walkSpeed = 1.3;
oilWalk = 0.3;
maxVspeed = 7;
premask = mask_index;
stepSpeed = 1/7;
stepFrames = 7;
iceDec = 0.025; //The deceleration on ice when not holding any buttons
iceDecWalk = 0.05; //The deceleration on ice when moving in the opposite direction
slideSpeed = 2.5;
slideFrames = 26;
//climbSpeed = 1.296875; //Official value of MM3
climbSpeed = 1.3;
initChargeTime = 20; //The amount of frames after which to start charging after the shooting animation is complete
chargeTime = 57; //Official value of MM6
hitTime = 32; //The amount of frames you experience knockback after getting hit
onSlope = false;

if global.sturdyHelmet {hitTime = 10;}

//Variables
ground = true;
prevGround = false;
prevXScale = image_xscale;
isStep = false;
stepTimer = 0;
canInitStep = true; //Can we initialize sidestepping?

xspeed = 0;
yspeed = 0;

canMinJump = false;
canMove = true;
canSpriteChange = true;
climbShootXscale = 1;
canShoot = true;
isShoot = false;
shootStandstill = false;
shootTimer = 0;
bullets = 0;
isSlide = false;
stopSld = false;
slideTimer = 0;
canHit = false;
isHit = false;
hitTimer = 0;
drawHitspark = false;
invincibilityTimer = 0;
isCharge = false;
chargeTimer = 0;
initChargeTimer = 0; //The timer for when to start charging after exiting the shooting animation
canGravity = true;
climbing = false;
climbSpriteTimer = 0;
canStep = false; //We can actually perform the step event even if canStep = false; it's merely used to block certain events from happening at the first frame, as canStep becomes true after 1 frame
alarm[0] = 1; //For canStep
teleporting = false;
teleportTimer = 0;
teleportImg = 0;
deathByPit = false; //Did we die by falling in a bottomless pit?
playLandSound = true; //Should we play the landing SFX when colliding with a floor? (Disabled on ladders, for example)
playLandSoundTimer = 2; //Lasts two frames, since it takes 1 extra frame for the collision code to register
currentGrav = grav; //Normal gravity or water gravity?
currentJumpSpeed = jumpSpeed; //Normal jump speed or water jump speed?
inWater = false;
bubbleTimer = 0; //Timer for the air bubble MM creates under water
blinkTimer = 0; //Timer for MM's blinking animation when standing still
blinkTimerMax = 120;
blinkImage = 0; //0 for no blinking, 1 for blinking
blinkDuration = 8; //The amount of frames the blinking lasts
drawWeaponIcon = false; //Whether or not we should draw the weapon icon above our head (used when using quick weapon switching)
drawWeaponIconTimer = -1;
onRushJet = false; //Are we on the Rush Jet?
isdead = 0;
clipup = 0;
sinkin = 0;
canturn = 1;

platformspeed = 0;
platformamount = 0;

isfrozen = 0;
freezetimer = 0;

inWaveBike = false;
onSakugarne = false;
onSled = false;
deathtimer = -1;

global.outlineCol = c_black;
event_user(0);

//Show the READY text
showReady = true;
readyTimer = 0;
canSpriteChange = false;
canMove = false;
canGravity = false;
canPause = false;
image_speed = 0;

global.GravityDir = 1;
global.enableSlide = true;
global.enableCharge = true;

//Set location
if !global.hasTeleported
{
    if global.checkpoint = room
    {
        x = global.checkpointX;
        y = global.checkpointY;
    }
}
else
{
    if !global.coop
    {
        global.hasTeleported = 0;
    }
    if global.teleportX != -1 &amp;&amp; global.teleportY != -1
    {
        x = global.teleportX;
        y = global.teleportY;
    }
    showReady = false;
    teleporting = true;
    landy = y;
}

if global.checkpoint == 0
{
    instance_create(x,y,objCheckpoint);
}

//Camera
viewplayer = 1;
camerastart = 1;

//Animation Initiation
spriteX = 0;
spriteY = 0;

animNameID = 0;

spriteLoopStart = 0;
spriteLoopEnd = 1;
spriteLoopSpeed = 1;
spriteLoopID = 0;
spriteLoopPoint = 0;

for(i=0;i&lt;=99;i+=1)
{
    spriteIDX[i] = 0;
    spriteIDY[i] = 0;
}

animSpinOffset = 0;
animSpinTurn = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if camerastart 
{
    playerCameraInit(0,0);
    playerCamera();
    camerastart = 0;
    alarm[0] = 2;
}
else
{
    playerDeactivateObjects();
}

canStep = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerEndStep();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !global.frozen &amp;&amp; !frozen
{
    //General step event code
    playerGround();
    playerStep();
    
    //Collision code
    playerCollision();
    
    //Hanle movement speeds
    playerMovement();
    
    //Camera
    playerCamera();
    
    playerGround();
    
    //Shooting
    playerShoot();
    
    //Quick weapon switching
    playerSwitchWeapons();
    
    //Handle the sprites
    playerHandleSprites('Normal');
    
    //Moving from one section to the next, if possible
    playerSwitchSections();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerPalette();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(objHealthWeaponBar) {
    instance_create(x, y, objHealthWeaponBar);
}
if !instance_exists(objFadeIn) {
    instance_create(x, y, objFadeIn);
}
/*if !instance_exists(objectviewer) {
    instance_create(x, y, objectviewer);
}*/

//Automatically place borders
//Vertical borders
for (v=0; v&lt;room_height; v+=(view_hview+16);)
for (i=0; i&lt;room_width; i+=view_wview;)
{
    instance_create(i,v+8,objSectionBorderVertical);
    instance_create(i,v+(view_hview+8),objSectionBorderVertical);
}

//Delete vertical border to make vertical scrolling possible
with objSectionBorderVertical
{
    if place_meeting(x,y,objSectionVerticalScrolling) {instance_destroy();}
}

//Connect Vertical borders
with objSectionBorderVertical
{
    if !place_meeting(x-12,y,object_index)
    {
        while place_meeting(x+12,y,object_index)
        {
            with instance_place(x+12,y,object_index) {instance_destroy();}
            image_xscale += 1;
        }
    }
}

//Connect Horizontal borders
with objSectionBorderHorizontal
{
    if !place_meeting(y-12,y,object_index)
    {
        while place_meeting(y+12,y,object_index)
        {
            with instance_place(y+12,y,object_index) {instance_destroy();}
            image_yscale += 1;
        }
    }
}

playerCameraInit(0,0);
playerCamera();

if id = instance_find(objMegaman,0)
{
    for (i=1; i&lt;global.playerCount; i+=1) //Create others
    {
        if global.playerHealth[i] &lt;= 0
        {
            continue;
        }
        
        with instance_create(x,y,object_index)
        {
            player_id = other.i;
            readyTimer -= player_id*12;
            event_user(0);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerDraw()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
