<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWilyCastle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

alarm[0] = 1;

skipped = 0;
started = 0;
drawspath = 0;
counter = 0;

cutscene = -1;

display = 0;
displaysize = 48;

level[1] = lvlCutMan;
level[2] = lvlCutMan;
level[3] = lvlCutMan;
level[4] = lvlCutMan;
level[5] = lvlCutMan;
level[6] = lvlCutMan;
level[7] = lvlCutMan;

text[1] = "";
text[2] = "";
text[3] = "";
text[4] = "";
text[5] = "";
text[6] = "";
text[7] = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Go to level

i = instance_create(0, 0, objFadeout);
i.type = "room";
i.myRoom = level[global.castlestagesbeaten+1];

global.currentLevel = i.myRoom;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Progress Path
if counter &lt; pathstop &amp;&amp; !skipped
{
    if started = 0
    {
        loopSFX(sfxCastlePath);
        started = 1;
    }
    alarm[10] = 4;
    counter += 1;
    with objWilyCastlePath
    {
        if other.counter &gt;= triggernumber
        {
            visible = 1;
        }
    }
    if counter = pathstop
    {
        audio_stop_sound(sfxCastlePath);
        alarm[11] = 100;
        alarm[10] = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Make dark / show dots
image_index = 1;
drawspath = 1;
alarm[10] = 96;

with objWilyCastleDot
{
    visible = 1;
    if triggernumber = global.castlestagesbeaten+1 {image_speed = 0.1;}
}
with objWilyCastlePath
{
    if other.counter &gt;= triggernumber {visible = 1;}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display += 8;

//display += (displaysize-display)/4;

if round(display) = displaysize
{
    display = displaysize;
}

if display &lt; displaysize
{
    alarm[1] = 4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cutscene += 1;

switch(cutscene)
{
case 0: //Start
    alarm[0] = 480; break;
case 1: //Dark
    image_index = 1;
    alarm[0] = 5;
    break;
case 2: //Flash
    background_color = c_white;
    alarm[0] = 10;
    break;
case 3: //Flash stop
    background_color = c_black;
    alarm[0] = 10;
    break;
case 4: //Flash
    background_color = c_white;
    alarm[0] = 10;
    break;
case 5: //Flash stop
    background_color = c_black;
    alarm[0] = 10;
    break;
case 6: //#3 Flash
    background_color = c_white;
    alarm[0] = 10;
    break;
case 7: //#3 Flash stop
    background_color = c_black;
    alarm[9] = 10;
    event_perform(ev_alarm,1);
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//skipping it
if skipped = 0 &amp;&amp; !instance_exists(objFadeIn) &amp;&amp; !instance_exists(objFadeout)
{
    if global.keyPause[0]
    {
        skipped = 1;
        for (i=0; i!=12; i+=1;) {alarm[i] = -1;}
        audio_stop_all();
        background_color = c_black;
        if drawspath = 1
        {
            alarm[11] = 12;  
            with objWilyCastlePath {counter = other.pathstop ;}
        }
        else if drawspath = 0
        {
            alarm[11] = 1; 
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_sprite(sprWilyCastleBox,0,view_xview,view_yview+view_hview-display)

if display = displaysize
{
    draw_set_halign(fa_middle);
    draw_text(128,view_yview+view_hview-display+8,text[global.castlestagesbeaten+1])
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
