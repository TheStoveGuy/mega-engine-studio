<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprEddie</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 0;

// Item = [objectName]
// permanent = 
myItem = noone;
permanent = true;

teleporting = false;
teleportTimer = 0;
teleportY = 0;
teleportingUp = true;

inWater = 0;
ground = 1;

Phase = 0;
Time = 0;
nitem = noone;

imgsp = 1/6;
img = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead {
    if teleporting {exit;}
    
    if instance_exists(target) {
        if abs(x-target.x) &lt;= 40 &amp;&amp; Phase = 0 {
            Phase = 1;
            image_index = 0;
        }
    }
    if Phase == 0 &amp;&amp; ground {
        img += imgsp;
        if img &gt;= 1 {
            image_index += 1;
            if image_index = 3 {
                image_index = 0;
            }
            img -= 1;
        }
    }
    
    if Phase == 1 {
        Time += 1;
        switch(Time) {
            case 30:
                image_index = 3;
                break;
            case 40:
                image_index = 0;
                break;
            case 50:
                image_index = 4;
                break;
            case 55:
                image_index = 5;
                event_user(0);
                break;
            case 75:
                image_index = 0;
                break;
            case 110:
                sprite_index = sprEddieTeleport;
                playSFX(sfxTeleportOut);
                teleporting = true;
                break;
        }
    }
    
    checkGround();
    gravityCheckGround();
    generalCollision();
    
    if yspeed == 0 &amp;&amp; Phase = 0 &amp;&amp; ground {
        xspeed = image_xscale;
        calibrateDirection();
    }
    else {
        xspeed = 0;
    }
    
    y += yspeed;
    x += xspeed;
}
else if dead {
    img = 0;
    image_index = 0;
    Phase = 0;
    Time = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.object_index = objSlashClaw
{
    if myItem == noone
    {
        for (i=0; i&lt;4; i+=1;) {
            event_user(0);
            nitem.x = bbox_get_xcenter()-8;
            nitem.y += 2;
            nitem.xspeed -= 0.5*i*sign(nitem.xspeed);
            nitem.yspeed -= 0.5*i;
            nitem.yspeed += 1;
            nitem.alarm[0] += irandom_range(-20,20);
        }
    }
    else {
        other.guardcancel = 2;
    }
}
else {
    other.guardcancel = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();

if myItem == noone {
    var randitem;
    randitem = floor(random(90));
    
    if (randitem &lt; 3) {
        nitem = instance_create(x-8,y-24,objYashichi);
        nitem.alarm[0] = 105 * 2;
        nitem.xspeed = image_xscale;
        nitem.yspeed = -4;
    }
    else if (randitem &lt; 30) {
        var item;
        randomize();
        item = choose(objLife, objETank);
        randomize();
        nitem = instance_create(x-8,y-24,item);
        nitem.alarm[0] = 105 * 2;
        nitem.xspeed = image_xscale;
        nitem.yspeed = -4;
    }
    else {
        var item;
        randomize();
        item = choose(objLifeEnergyBig, objWeaponEnergyBig);
        randomize();
        nitem = instance_create(x-8,y-24,item);
        nitem.alarm[0] = 105 * 2;
        nitem.xspeed = image_xscale;
        nitem.yspeed = -4;
    }
}
else {
    randomize();
    nitem = instance_create(x-8,y-24,myItem);
    nitem.alarm[0] = 105 * 2;
    nitem.xspeed = image_xscale;
    nitem.yspeed = -4;
}

respawn = false;

with objGlobalControl
{
    ds_list_add(pickups,string(room)+'/'+string(other.id))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !teleporting {
    drawSelf();
}
else if teleporting &amp;&amp; !teleportingUp {
    if round(view_yview[0]-32+teleportY) &gt;= y &amp;&amp; shouldLand {
        if teleportTimer == 0 {
            playSFX(sfxTeleportIn);
        }
        //Done teleporting; play a little animation before giving Mega Man control
        if teleportTimer != 9 { //Rush disappears for one frame
            drawSelf();
        }
        if teleportTimer == 2 {
            image_index = 1;
        }
        else if teleportTimer == 4 {
            image_index = 0;
        }
        else if teleportTimer == 6 {
            image_index = 2;
        }
        else if (teleportTimer = 9 &amp;&amp; !collision_rectangle(x-5, bbox_top, x+5, bbox_bottom, objSolid, false, false))
        || (teleportTimer == 15 &amp;&amp; collision_rectangle(x-5, bbox_top, x+5, bbox_bottom, objSolid, false, false)) {
            teleporting = false;
            teleportTimer = 0;
            teleportY = 0;
            if !collision_rectangle(x-5, bbox_top, x+5, bbox_bottom, objSolid, false, false) {
                canCoil = true;
            }
            sprite_index = sprRush;
            exit;
        }
        
        if !global.frozen {
            teleportTimer += 1;
        }
    }
    else if round(view_yview[0]-32+teleportY) &gt;= view_yview[0]+view_hview[0] {
        instance_destroy();
    }
    else {
        //Teleporting downwards
        draw_sprite_ext(sprite_index, image_index, round(x), round(view_yview[0]-32+teleportY), image_xscale, image_yscale, image_angle, c_white, 1);
        
        if !global.frozen {
            teleportY += 7;
        }
    }
}
else if teleportingUp {
    if teleportY == 0 {
        //Done teleporting; play a little animation before giving Mega Man control
        if teleportTimer != 9 { //Rush disappears for one frame
            drawSelf();
        }
        if teleportTimer == 2 {
            image_index = 2;
        }
        else if teleportTimer == 4 {
            image_index = 0;
        }
        else if teleportTimer == 6 {
            image_index = 1;
        }
        else if teleportTimer = 9 {
            teleportY -= 7;
            image_speed = 0;
            image_index = 0;
            exit;
        }
        
        if global.frozen == false
            teleportTimer += 1;
    }
    else {
        //Teleporting upwards
        draw_sprite_ext(sprite_index, image_index, round(x), round(y+teleportY), image_xscale, image_yscale, image_angle, c_white, 1);
        
        if !global.frozen {
            teleportY -= 7;
        }
        if round(y+teleportY) &lt;= view_yview[0] || round(y+teleportY) &lt;= 0 {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
