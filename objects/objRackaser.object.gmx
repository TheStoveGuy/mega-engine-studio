<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRackaser</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 4;
healthpoints = healthpointsStart;
contactDamage = 4;
contactStart = contactDamage;

//Enemy specific code
xspeed = 0;
yspeed = 0;
image_speed = 0;
image_index = 0;
popped = false;
waitTimer = 0;
animTimer = 0;
waddle=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if global.frozen == false &amp;&amp; dead == false &amp;&amp; global.flashStopper == false
{
    checkGround();
    generalCollisionTurnaround();
    if collision_rectangle(x-32,y-224,x+32,y+224,target,false,true) and popped == false
    {
        popped = true;
        image_index = 0;
        yspeed = 1.5;
        calibrateDirection();
    }
    
    if ground == true
    {
        waitTimer += 1;
        if image_index &lt; 4
        {
            image_index = 4;
        }
    }
    
    animTimer += 1;
    if animTimer == 6
    {
        animTimer = 0;
        if ground == false and waddle == false
        {
            image_index += 1;
            if image_index &gt; 3 { image_index = 0; }
        }
        else if ground == true and waddle == false
        {
            image_index += 1;
            if image_index == 11
            {
                a = instance_create(x+28*image_xscale,y-8,objEnemyBullet);
                a.sprite_index = sprUmbrella;
                a.xspeed = 2*image_xscale;
            }
            else if image_index == 13 { waddle = true; }
        }
        else if waddle == true
        {
            if image_index == 13 { image_index = 14; }
            else if image_index == 14 { image_index = 15; }
            else if image_index == 15 { image_index = 16; }
            else { image_index = 13; }
        }
    }
    
    if xspeed == 0 and waddle == true { calibrateDirection(); xspeed = image_xscale*1; }

    if ground == true { x += xspeed; }
    y += yspeed;
    if waddle == true { gravityCheckGround(); mask_index = sprRackaserMask; }
}
else
{
    if dead == true
    {
        image_index = 0;
        image_speed = 0;
        waitTimer = 0;
        animTimer = 0;
        popped = false;
        waddle = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dead = 1;

if explodeWhenDead
{
    instance_create(bbox_get_xcenter()+16, bbox_get_ycenter(), objHarmfulExplosion);
    playSFX(sfxMM3Explode);
    exit;
}

a = instance_create(bbox_get_xcenter()+16, bbox_get_ycenter(), objItemExplosion);

if itemDrop == noone {exit;}

if itemDrop == objKey
{
    a = instance_create(bbox_get_xcenter()+8, bbox_get_ycenter()-8, objKey);
    a.yspeed = -4;
    a.homingTimer = 90;
    playSFX(sfxKeySpawn);
}
else 
{
    a.myitem = itemDrop;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if popped == true { event_inherited(); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
