<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGeminiIntro</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>sprGeminiMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthIndex = 1;

healthpointsStart = 28;
healthpoints = healthpointsStart;

pose = sprGeminiIntro;
poseImgSpeed = 16/60;
contactDamage = 6;

ground = false;
attackTimer = 0;
jumpTimer = 0;
jumpAmount = 0;
canInitShoot = true;
phase = 0;
getLastXspeed = xspeed;
landTimer = 0;
clonse = noone;
memYspeed = 0;
pauseY = 0;

delay = 0;

knockbackTimer = -1;
JumpToX = 0;

//stores the weapon damage values
wpndmg[0] = 1; //Mega Buster
wpndmg[1] = 2; //Mega Buster Charge1
wpndmg[2] = 3; //Mega Buster Charge2
wpndmg[3] = 3; //Weapon Explosion
wpndmg[4] = 1; //HornetChaser
wpndmg[5] = 2; //JewelSatellite
wpndmg[6] = 2; //GrabBuster
wpndmg[7] = 1; //TripleBlade
wpndmg[8] = 4; //WheelCutter (search snake)
wpndmg[9] = 2; //SlashClaw
wpndmg[10] = 3; //Sakugarne
wpndmg[11] = 2; //SuperArrow
wpndmg[12] = 1; //WireAdapter
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if global.frozen == false
{
    if isFight == true
    {
        x += xspeed;
        y += yspeed;
        
        checkGround();
        gravityCheckGround();
        generalCollision();
        
        if delay &gt; 0
            delay -= 1;
        if global.bossHealth[1] &gt; healthpointsStart/2 // clone
        and !instance_exists(objGemineighbour)
            {
            clone = instance_create(x,y,objGemineighbour);
            clone.clone = id;
            }
        switch phase
        {
            case 0: //RunJumping
                if global.bossHealth[1] &lt;= healthpointsStart/2 // Phase 2
                and ground
                {
                    phase = 2;
                    xspeed = 0;
                    yspeed = 0;
                    attackTimer = 0;
                }
                if JumpToX == 0
                    JumpToX = abs(x-(view_xview+view_wview));
                if ground
                and xspeed &lt; 0
                    xspeed = 0;
                if x &gt;= xstart
                and ground
                {
                    if delay &lt;= 0
                    {
                    sprite_index = sprGeminiJump;
                    yspeed = -7;
                    xspeed = arcCalcXspeed(yspeed, 0.25, x, y, view_xview+JumpToX-8, y);
                    attackTimer = 0;
                    image_xscale = -1;
                    }
                }
                else
                if ground
                {
                    attackTimer += 1;
                    if attackTimer &gt; 5
                    {
                        xspeed = 3;
                        image_xscale = 1;
                        sprite_index = sprGeminiWalk;
                        image_speed = 0.2;
                    }
                    else
                        sprite_index = sprGeminiStand;
                    if global.keyShootPressed[target.player_id]
                    {
                        phase = 1;
                        xspeed = 0;
                        image_index = 0;
                        image_speed = 0;
                        attackTimer = 0;
                    }
                }
                else
                    sprite_index = sprGeminiJump;
                if (place_meeting(x+xspeed,y,objSolid) || place_meeting(x+xspeed,y,prtMovingPlatformSolid)) // stuck prevention
                {
                    sprite_index = sprGeminiJump;
                    if ground
                        yspeed = -4;
                    xspeed = sign(xspeed);
                }
                
                // pause if the clone is not on the same phase and we're in the air
                if instance_exists(clone)
                and !ground
                {
                    if clone.phase != phase
                    {
                        if pauseY != 0
                            y = pauseY;
                        else
                            {
                            pauseY = y;
                            y -= yspeed;
                            }
                        x -= xspeed;
                        if memYspeed == 0
                            memYspeed = yspeed;
                        yspeed = 0;
                    }
                    else
                    if memYspeed != 0
                        {
                        yspeed = memYspeed;
                        memYspeed = 0;
                        pauseY = 0;
                        }
                }
            break;
    
            case 1: //shooting
                calibrateDirection();
                attackTimer += 1;
                sprite_index = sprGeminiShoot;
                if attackTimer &lt;= 5
                    image_index = 0;
                if attackTimer == 5
                {
                    image_index = 1;
                    bull = instance_create(x,y+2,objGeminiBullet);
                    bull.xspeed = image_xscale*4
                }
                if attackTimer &gt;= 10
                    phase = 0;
            break;
    
            case 2:
            if (place_meeting(x+image_xscale*8,y,objSolid) || place_meeting(x+image_xscale*8,y,prtMovingPlatformSolid))
                image_xscale = -image_xscale;
            if attackTimer &lt; 120
            {
            if ground
            {
                if landTimer &lt;= 5
                    {
                    xspeed = 0;
                    sprite_index = sprGeminiStand;
                    landTimer += 1;
                    }
                else
                    {
                    xspeed = image_xscale*1.5;
                    sprite_index = sprGeminiWalk;
                    image_speed = 0.15;
                    }
            if global.keyShootPressed[target.player_id]
                {
                xspeed = image_xscale*1.5;
                yspeed = -5;
                landTimer = 0;
                }
            }
            else
            if !ground
                sprite_index = sprGeminiJump;
            }
            
            if ground
            and !instance_exists(objGeminiManLaser)
            or attackTimer &gt;= 120
                attackTimer += 1;

            if attackTimer &gt;= 120
                {
                xspeed = 0;
                sprite_index = sprGeminiShoot
                if attackTimer &lt; 125
                    image_index = 0;
                else
                    image_index = 1;
                if attackTimer == 125
                    {
                    for(i=-1;i&lt;=1;i+=1)
                        {
                        laser = instance_create((round(x/2)*2)+i*7,y+2,objGeminiManLaser)
                        laser.xspeed = image_xscale*2;
                        if i == -1 
                            laser.x += 1; // for some reason the first one seperates
                        }
                    }
                if attackTimer &gt;= 130
                    attackTimer = 60;
                }
            break;
        }
        
        
        //Face the player
//            calibrateDirection();
    }
}
else
{
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
