<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

playMusic("options.ogg",1,1);

option = 1;
endx = 8;
selected = 0;
shift = 0;

//lr = objGlobalControl.lr;
lr = room_last;
roomlist = ds_list_create();
roomnames = ds_list_create();
//Get lvl-rooms
for (i=0; i&lt;lr; i+=1;) {
    if room_exists(i) {
        n = room_get_name(i);
        if string_pos('lvl',n) = 1 {
            n = string_replace(n,'lvl','');
            if string_pos('rm',n) = 1 {
                n = string_replace(n,'rm','');}
            if string_length(n) &gt; 18 {
                n = string_copy(n,0,18);
            }
            ds_list_add(roomlist,i);
            ds_list_add(roomnames,n);
        }
    }
}

//Fill in the blanks
while ds_list_size(roomlist) &lt; 8
{
    ds_list_add(roomlist,0);
    ds_list_add(roomnames,'-Slot Empty-');
}

//Cursor red
myred = make_color_rgb(248,56,0);
col = myred;
alarm[0] = 40;

//Reset variables
global.checkpoint = false;
global.bossTextShown = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if col = c_white
{
    alarm[0] = 40;
    col = myred;
}
else
{
    alarm[0] = 4;
    col = c_white;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !selected {
    if global.keyUpPressed[0]
    {
        option -= 1; //Up
        if shift &gt;= option { //Scroll Up
            shift -= 1;
        }
        if option = 0 { //Scroll to the bottom
            option = ds_list_size(roomlist);
            shift = option-endx;
        }
        playSFX(sfxMenuMove);
    }
    else if global.keyDownPressed[0]
    {
        option += 1; //Down
        if option &gt; ds_list_size(roomlist) { //Scroll to the top
            option = 1;
            shift = 0;
        }
        else if option &gt; endx+shift {
            shift += 1;
        }
        playSFX(sfxMenuMove);
    }
    if global.keyPausePressed[0]
    {
        var ID;
        myRoom = ds_list_find_value(roomlist,option-1);
        if myRoom = 0 {
            playSFX(sfxError); exit;
        }
        ID = instance_create(0, 0, objFadeout);
            ID.type = "room";
            ID.myRoom = myRoom;
            global.currentRoom = myRoom;
        selected = 1;
        playSFX(sfxMenuSelect);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_valign(fa_top);

draw_sprite_ext(sprStageSelectLight,image_index,128,44+(option-1-shift)*16,1,1,image_angle,col,image_alpha);

if shift &gt; 0 {
    draw_sprite_ext(sprStageSelectArrow,image_index,128,48-13,1,1,image_angle,image_blend,image_alpha);
}
if endx+shift &lt; ds_list_size(roomlist) {
    draw_sprite_ext(sprStageSelectArrow,image_index,128,48+5+endx*16,1,-1,image_angle,image_blend,image_alpha);
}

for (i=0; i&lt;endx; i+=1;) {
    draw_text(128,48+i*16,ds_list_find_value(roomnames,i+shift));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
