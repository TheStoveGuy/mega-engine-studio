<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprElectricGabyoallOrange</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code (all optional):
//height = &lt;number&gt; (Height the electric gabyoall covers in tiles. Includes the tiles the electric gabyoall itself occupies) (this can be used to have gabyoalls that have a range that goes through blocks)
//spd = &lt;number&gt; (Speed of the gabyoall (default 0.6)) (optional)
//shootWait = &lt;number&gt; (how long the gabyoall waits in between shooting electricity (default 100)) (optional)
//col = &lt;number&gt; (0 = red (default); 1 = orange; 2 = blue) (optional)

event_inherited();

respawn = true;

//Default
healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;

respawnRange = -1; //so you can have really long ones in vertical sections that don't despawn
despawnRange = -1; //so you can have really long ones in vertical sections that don't despawn

//enemy specific
phase = -1;

height = 0;
col = 0; //0 = orange (default); 1 = red;
init = 1;

partner = noone;

spd = 0.6;

shootWait = 70;
shootWaitTimer = shootWait;
blinks = 2;
electricityList = noone;

imgSpd = 0.3;
imgIndex = 0

calibrateDirection();

//stores the weapon damage values
wpndmg[0] = 0; //Mega Buster
wpndmg[1] = 0; //Mega Buster Charge1
wpndmg[2] = 0; //Mega Buster Charge2
wpndmg[3] = 0; //Weapon Explosion
wpndmg[4] = 0; //HornetChaser
wpndmg[5] = 0; //JewelSatellite
wpndmg[6] = 0; //GrabBuster
wpndmg[7] = 0; //TripleBlade
wpndmg[8] = 0; //WheelCutter
wpndmg[9] = 1; //SlashClaw
wpndmg[10] = 0; //Sakugarne
wpndmg[11] = 0; //SuperArrow
wpndmg[12] = 0; //WireAdapter
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// destroy electricity
event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if init
{
    init = 0;
    
    shootWaitTimer = shootWait;
    
    var i;
    p = 0;
    for (i = y + 8; i &lt;= room_height; i += 16)
    {
        p += 1;
        if (place_meeting(x, i, objSolid)){
            height = p;
            break;
        }
    }
    
    if (i &gt; room_height)
    {
        show_error("objElectricGabyoall at position (" + string(x) + ", " + string(y) + ") was unable to automatically set its height. Try setting it in the creation code.", false);
    }
}

event_inherited();

//this still needs to be done even if it's frozen
if (global.frozen == false &amp;&amp; dead == false &amp;&amp; instance_exists(target) &amp;&amp; phase &gt; 0){
    if (partner == noone || !instance_exists(partner)){
        dead = true;
        event_user(1); // delete electricity
    }
}


//"set color phase" so the partner who has it set after creation code can set it too
if (phase == -1){
    switch col
    {
        case 0: sprite_index = sprElectricGabyoallOrange; break;
        case 1: sprite_index = sprElectricGabyoallRed; break;
        default: sprite_index = sprElectricGabyoallOrange; break;
    }
    
    phase = 0;
}

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    if instance_exists(target)
    {   
        generalCollision();
        
        if (respawn) { //if this is a non-main partner, then do no AI (except turn around). The main one will control this completely
            switch (phase)
            {
                //start up (only done by main controlling electric gabyoall
                case 0:
                    if (height &lt; 2)
                    {
                        show_error("That height for objElectricGabyoall is too small!", true);
                    }
                    
                    //start motion
                    calibrateDirection();
                    xspeed = spd * image_xscale;
                    
                    //checks, just in case
                    if (instance_exists(partner)){
                        event_user(0); //delete partner
                    }
                    
                    if (electricityList != noone){
                        event_user(1); //delete electricity
                    }
                    
                    //spawn partner
                    partner = instance_create(x, y + height * 16 - 1, objElectricGabyoall);
                    partner.respawn = false; //tells the parter to not be in charge of main the AI
                    partner.image_yscale = -1;
                    partner.spd = spd;
                    partner.col = col;
                    partner.partner = id;
                    
                    phase = 1;
                    break;
                
                //waiting to shoot
                case 1:
                    //animation
                    imgIndex += imgSpd;
                    if (imgIndex &gt;= 2){
                        imgIndex = imgIndex mod 2;
                    }
                    
                    if (shootWaitTimer &gt; 0){
                        shootWaitTimer -= 1;
                    }else{
                        phase = 2;
                        imgIndex = 2;
                    }
                    break;
                
                //shoot
                case 2:
                    //I reused shootWaitTimer, as a counter, boolean, AND another timer   :P
                    
                    //animation
                    if (shootWaitTimer &lt;= 0 &amp;&amp; shootWaitTimer &gt; -blinks){
                        imgIndex += imgSpd * 0.75;
                        if (imgIndex &gt;= 4){
                            imgIndex = imgIndex mod 4;
                            shootWaitTimer -= 1;
                        }
                    }else{
                        imgIndex += imgSpd;
                        if (imgIndex &gt;= 2){
                            imgIndex = imgIndex mod 2;
                        }
                    }
                    
                    if (shootWaitTimer == -blinks){
                        electricityList = ds_list_create();
                        var i;
                        for (i = 1; i &lt; (height - 1); i += 1){
                            ds_list_add(electricityList, instance_create(x, y + i * 16, objElectricGabyoallCurrent));
                        }
                        shootWaitTimer -= 1;
                    }
                    
                    if (shootWaitTimer &lt;= -blinks){
                        if (shootWaitTimer &gt; -40 - blinks){ //&lt;-- duration of shooting here
                            shootWaitTimer -= 1;
                        }else{
                            phase = 1;
                            event_user(1); //delete electricity
                            shootWaitTimer = shootWait;
                        }
                    }
                    break;
            }
        }
        
        //turn around if a wall is hit, or there's no more ground
        if (xspeed == 0
            || (image_yscale &gt; 0 &amp;&amp; !place_meeting(x + sprite_width + xspeed, y - 1, objSolid))
            || (image_yscale &lt; 0 &amp;&amp; !place_meeting(x + sprite_width + xspeed, y - sprite_height + 1, objSolid))){
            
            image_xscale = -image_xscale;
            xspeed = spd * image_xscale;
            
            //to let the partner detect being stopped by hitting a wall
            if (!respawn){
                partner.image_xscale = image_xscale;
                partner.xspeed = xspeed;
                partner.x = x;
            }
        }
    }
    
    
    //non-main partner doesn't do stuff with its own speed values
    if (!respawn){
        exit;
    }
    
    x += xspeed;
    y += yspeed;
    
    //control partner
    if (partner != noone &amp;&amp; instance_exists(partner)){
        partner.image_index = image_index;
        partner.x = x;
        partner.xspeed = xspeed;
    }
    
    //control electricity
    if (electricityList != noone){
        var i;
        for (i = 0; i &lt; ds_list_size(electricityList); i += 1){
            current = ds_list_find_value(electricityList, i);
            current.x = x;
        }
    }
}
else if dead
{
    phase = 0;
    event_user(0); //delete partner and electricity
    shootWaitTimer = shootWait;
    xspeed = 0;
    imgIndex = 0;
}

image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>delete electricity</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (electricityList != noone){
    var i;
    for (i = 0; i &lt; ds_list_size(electricityList); i += 1){
        current = ds_list_find_value(electricityList, i);
        with (current){
            instance_destroy();
        }
    }

    ds_list_destroy(electricityList);
    electricityList = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>delete partner</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(1); // delete electricity

if (partner != noone &amp;&amp; instance_exists(partner)){
    with (partner){
        instance_destroy();
    }
    
    partner = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
