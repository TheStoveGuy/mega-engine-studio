<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWaveBike</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtAlwaysActive</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

Active = 0;

dir = 1;

Speed = 0;
MaxSpeed = 2;

Dead = false;
yOffset = 0;
waterPlat = -1;
alarm[0] = 2;
Scroll = true;
Miniboss = noone;

alarm[0] = 2;

rider = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>waterPlat = instance_create(x,y+sprite_yoffset,objSolid);

// spawn additional jetskis if more players
if !place_meeting(x,y,object_index)
{
    for (var i=1; i&lt;global.playerCount; i+=1)
    {
        with instance_create(x+i*4*dir,y,object_index)
        {
            depth = i*10
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !global.frozen &amp;&amp; (insideView() || Active)
{
    if Active
    {
        with objMegaman
        {
            viewplayer = false;
        }
        global.weapon[rider.player_id] = 0;
        if instance_exists(objSectionSwitcher)
        {
            with rider
            {
                visible = false
            }
        }
        else {visible = true;}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = dir;

if !global.frozen &amp;&amp; (insideView() || Active)
{
    if !Active
    {
        with objMegaman
        {
            if !inWaveBike {
                with other 
                {
                    if !Active
                    {                
                        if place_meeting(x,y,other.id)
                        {
                            Active = true;
                            rider = other.id;
                            player_id = rider.player_id;
                            depth = 0;
                            with rider
                            {
                                x = other.x;
                                y = other.y;
                                ground = 1;
                                if !global.coop
                                    viewplayer = false;
                                canturn = 0;
                                yspeed = 0;
                                global.weapon[player_id] = 0;
                                event_user(0);
                                inWaveBike = true;
                            }
                        }
                    }
                }
            }
        }
        image_index += 0.2;
        if image_index &gt;= 2
        {
            image_index = 0;
        }
    }
    else if instance_exists(rider)
    {
        with rider
        {
            initChargeTimer = 0;
            chargeTimer = 0;
            playLandSoundTimer = 0;
            playLandSound = 0;
            image_xscale = other.image_xscale;
            visible = false;
            global.enableSlide = false;
        }
        
        //Stop if miniboss
        if !Scroll
        {
            Miniboss = instance_nearest(view_xview+view_wview/2,view_yview+view_hview/2,prtMiniBoss)
            {
                if instance_exists(Miniboss)
                {
                    if !insideSection(Miniboss.x,Miniboss.y)
                    {
                        Scroll = true;
                    }
                }
                else
                {
                    Scroll = true;
                }
            }
        }
        
        if !Dead
        {
            rider.x = x;
            //x = rider.x;
            y = rider.y;
            speedadd = 0;
            if global.keyRight[rider.player_id] {speedadd += 1;}
            if global.keyLeft[rider.player_id] {speedadd -= 1;}
        }
        
        if !Scroll
            Speed = 0.5;
        
        with rider
        {
            xs = xspeed;
            ys = yspeed;
            xspeed = (other.Speed*other.dir)+other.speedadd;
            yspeed = 0;
            playerCollision();
            x += xspeed;
            xspeed = 0;
            yspeed = ys;
        }
        x = rider.x;
        
        if abs(Speed) &lt; MaxSpeed
        {
            Speed += 0.05
        }
        
        //Move screen
        if !Dead &amp;&amp; Scroll
        {
            with rider
            {
                view_xview += other.Speed*other.dir;
                if global.coop {
                    viewplayer = true;
                }
                playerCamera();
            }
        }
        
        //Destroy
        with objWaveManJetSkiStopper
        {
            if (other.bbox_left &gt; bbox_left &amp;&amp; other.dir = 1)
            or (other.bbox_right&lt; bbox_right&amp;&amp; other.dir =-1)
            {
                with other
                {
                    instance_destroy();
                    rider.visible = true;
                    rider.viewplayer = 1;
                    rider.canturn = 1;
                    playSFX(sfxExplosion);
                    instance_create(x,y,objBigExplosion);
                    rider.yspeed = -5;
                    global.enableSlide = true;
                }
            }
        }
        
        //Landing on water
        if place_meeting(x,y+12,objWater) &amp;&amp; global.GravityDir == 1
        {
            water = instance_place(x,y+12,objWater)
            if y &lt; water.y-12
            {
                if !instance_exists(waterPlat)
                {
                    waterPlat = instance_create(water.x,water.y+1,objSolid);
                }
                else
                {
                    waterPlat.x = x;
                    waterPlat.y = water.y+1;
                }
            }
        }
        else if instance_exists(waterPlat)
        {
            with waterPlat {instance_destroy();}
        }
    }
}
else
{
    if Active
    {
        if instance_exists(objSectionSwitcher)
        {
            if instance_exists(rider)
            {
                x = rider.x;
                y = rider.y;
            }
            Scroll = false;
        }
    }
    if Dead
    {
        instance_destroy();
    }
}

if Active 
{
    image_yscale = global.GravityDir;
    if !global.frozen or instance_exists(objSectionSwitcher)
    {
        image_index += 0.2;
    }
    with rider
    {
        if !ground {
            other.image_index = 0;
        }
        playerHandleSprites("Bike");
    }
}

switch floor(image_index)
{
    case 0:
        yOffset = 0; break;
    case 1:
        yOffset = 1; break;
    case 2:
        yOffset = 2; break;
    case 3:
        yOffset = 1; break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !Active
{
    draw_sprite_ext(sprite_index,-1,round(x),round(y)+yOffset,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
}
else if instance_exists(rider)
{
    draw_sprite_ext(sprite_index,-1,round(x),round(y)+yOffset,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
    with rider
    {
        visible = 1;
        tx = x; ty = y;
        x = round(other.x)-2*other.image_xscale;
        y = round(other.y)+other.yOffset-5*global.GravityDir;
        event_perform(ev_draw,0);
        x = tx; y = ty;
        visible = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
