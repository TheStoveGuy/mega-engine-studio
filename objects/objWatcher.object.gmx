<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWatcher</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code (all optional):
//popDelay - how long it is until the watcher pops up.
//dir - -1 is up, 1 is down

event_inherited();

respawn = true;

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;
contactStart = contactDamage;

//Enemy specific code
popDelay = 1;
dir = 1;

returnPopDelay = noone;
alarm[0] = 1;

alarmstop = -1;
state = 0;
shot = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>returnPopDelay = popDelay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    calibrateDirection();

    x += xspeed;
    y += yspeed;
    
    if yspeed == 0 { yspeed = 1*dir; }
    
    if popDelay &gt; -1 and returnPopDelay != noone {
        popDelay -= 1;
    }
    if popDelay == 0 {
        yspeed = 1*dir;
    }

    if collision_line(x-512,y,x+512,y,target,false,true) &amp;&amp; image_index == 0 {
        image_index = 1;
        alarmstop = 8;
    }
    
    if alarmstop &gt; -1 {alarmstop -= 1;}
    if alarmstop == 0
    {
        if state == 0 {
            image_index = 2;
            alarmstop = 10;
            state = 1;
        }
        else if state == 1 {
            playSFX(sfxBlockZap);
            a = instance_create(x+(8*image_xscale),y-22,objEnemyBullet)
            a.xspeed = 3*image_xscale;
            a.sprite_index = sprWatcherBullet;
            a.image_speed = 0.3;
            a = instance_create(x+(8*image_xscale),y+22,objEnemyBullet)
            a.xspeed = 3*image_xscale;
            a.sprite_index = sprWatcherBullet;
            a.image_speed = 0.3;
            state = 2;
            alarmstop = 10;
        }
        else if state == 2 {
            image_index = 1;
            yspeed = -yspeed;
            state = 3;
            alarmstop = 8;
        }
        else if state == 3 {
            image_index = 0;
        }
    }
}
else if dead {
    popDelay = returnPopDelay;
    alarmstop = -1;
    state = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if popDelay &lt;= 0
{
    drawSelf();
    canHit = true;
    contactDamage = contactStart;
}
else
{
    canHit = false;
    contactDamage = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
