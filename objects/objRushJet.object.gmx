<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRushJet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_speed = 0.25;

canhit = -1;

xspeed = 0;
yspeed = 0;

alarm[11] = 1;

decreaseAmmoTimer = 0;
decreaseAmmoTimerMax = 60;
shouldLand = true;

spd = 1.2;
canJet = true;
    
alarm[0] = 4 * 60;

//Moving platform code
obj = instance_create(x,y,objPlayerPlatform);
obj.sprite_index = sprite_index;
obj.image_xscale = image_xscale;
obj.image_yscale = image_yscale;
obj.respawn = 0;
obj.visible = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

with parent
{
    if onRushJet
    {
        onRushJet = false;
        canMove = true;
    }
}

instance_activate_object(obj);
with obj
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Teleport away
i = instance_create(x,y+16-8,objRushTeleport);
i.upordown = 'up';
i.parent = parent;
dead = true;
xspeed = 0;
yspeed = 0;

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj.x = x;
obj.y = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen
{
    if canJet //Waiting for Megaman
    {
        if place_meeting(x,y-1,parent)
        {
            if parent.ground &amp;&amp; !place_meeting(x,y,parent)
            {
                canJet = false;
                alarm[0] = -1;
            }
        }
    }
    else //Flying
    {
        xspeed = spd*image_xscale;
        
        //Take away ammo
        decreaseAmmoTimer += 1;
        if decreaseAmmoTimer &gt;= decreaseAmmoTimerMax
        {
            decreaseAmmoTimer = 0;
            global.ammo[player_id,global.weapon[player_id]] -= 1;
            if global.ammo[player_id,global.weapon[player_id]] &lt;= 0
            {
                global.ammo[player_id,global.weapon[player_id]] = 0;
                event_perform(ev_alarm, 0);
            }
        }
        
        if place_meeting(x,y-1,parent) &amp;&amp; parent.ground
        {               
            //Set player properties
            parent.canMove = false;
            parent.onRushJet = true;
            parent.xspeed = 0;
            //Move vertically
            yspeed = -global.keyUp[parent.player_id]+global.keyDown[parent.player_id];
            
            obj.x = -view_wview;
            obj.y = -view_yview;
            
            with parent
            {
                ys = yspeed;
                ypre = y;
                res = playLandSound;
                playLandSound = 0;
                yspeed = other.yspeed;
                playerCollision();
                other.yspeed = yspeed;
                yspeed = ys;
                playLandSound = res;
            }
            
            xs = xspeed;
            xspeed = 0;
            xpre = x;
            ypre = y;
            
            generalCollision();
            
            x = xpre;
            y = ypre;
            xspeed = xs;
            obj.x = x;
            obj.y = y;
        }
        else 
        {
            with parent
            {
                if onRushJet
                {
                    onRushJet = false;
                    canMove = true;
                }
            }
            yspeed = 0;
        }
    }
    
    x += xspeed;
    y += yspeed;
    
    if place_meeting(x, y, objSolid)
    {
        event_perform(ev_alarm, 0);
    }
    
    with obj
    {
        xspeed = other.x-x;
        yspeed = other.y-y;
        
        event_user(15);
        
        xspeed = 0;
        yspeed = 0;
        visible = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>SquareSize = 48;
spr = global.playerSprite[player_id]
col[0] = c_white;
col[1] = global.primaryCol[player_id];
col[2] = global.secondaryCol[player_id];
col[3] = global.outlineCol[player_id];

for (i=0; i&lt;4; i+=1;) 
{
    draw_sprite_part_ext (
        spr,i,
        1+(floor(25+image_index)*(SquareSize+3)),
        1+(floor(13)*(SquareSize+3)),
        SquareSize,SquareSize,
        round(x)-(22*image_xscale),
        round(y)-((30-7)*image_yscale),
        image_xscale,image_yscale,
        col[i],image_alpha
    );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
