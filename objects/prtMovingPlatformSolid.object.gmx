<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtGimmick</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

doesShift = true;
doesShiftX = true;
doesShiftY = true;

issolid = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper 
{
    event_user(15);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Vertical
if yspeed != 0
{
    with objMegaman
    {
        didshift = 0;
        if !teleporting &amp;&amp; yspeed*global.GravityDir &gt;= 0 //&amp;&amp; ground
        {
            if place_meeting(x,y+global.GravityDir*2,other.id)
            {
                y += other.yspeed;
                didshift = 1;
            }
        }
    }
    
    if doesShiftY &amp;&amp; doesShift
    {
        y += yspeed;
    }
    
    with objMegaman
    {
        var xs, ys;
        if !teleporting
        {
            if place_meeting(x,y,other.id) or didshift
            {
                ys = yspeed;
                xs = xspeed;
                xspeed = 0;
                yspeed = bbox_get_ycenter_object(other.id) - bbox_get_ycenter();
                ydir = sign(yspeed);
                
                res = playLandSound;
                playLandSound = 0;
                playerCollision();
                y -= sign(other.yspeed);
                
                yspeed = sign(other.yspeed)
                playerCollision();
                
                if yspeed != 0
                {
                    y += yspeed
                    yspeed = 0;
                }
                if place_meeting(x,y,other.id)
                {
                   global.playerHealth[player_id] = 0;
                }
                playLandSound = res;
                xspeed = xs;
                yspeed = 0;
                if global.GravityDir = -ydir
                {
                    yspeed = ys;
                }
            }
        }
    }
}

//Horizontal
if xspeed != 0
{
    with objMegaman
    {
        if !teleporting &amp;&amp; ground
        {
            if place_meeting(x,y+global.GravityDir*2,other.id)
            {
                platformspeed += other.xspeed;
                platformamount += 1;
            }
        }
    }
    
    if doesShiftX &amp;&amp; doesShift
    {
        x += xspeed;
    }
    
    with objMegaman
    {
        var xs, ys;
        if !teleporting
        {
            if place_meeting(x,y,other.id) //&amp;&amp; !didshift
            {
                xs = xspeed;
                ys = yspeed;
                xspeed = (bbox_get_xcenter_object(other.id) - bbox_get_xcenter());
                yspeed = 0;
                
                res = playLandSound;
                playLandSound = 0;
                playerCollision();
                x -= sign(other.xspeed);
                
                xspeed = sign(other.xspeed)
                playerCollision();
                
                if xspeed != 0
                {
                    x += xspeed;
                    xspeed = 0;
                }
                if place_meeting(x,y,other.id)
                {
                    global.playerHealth[player_id] = 0;
                }
                
                playLandSound = res;
                yspeed = ys;
                if xspeed != 0
                {
                    xspeed = xs;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
