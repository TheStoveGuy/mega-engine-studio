<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRockPlatform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>prtMovingPlatformSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

xspeed = 0;
yspeed = 0;

phase = 1;
Timer = 0;
canFall = false;
FallTimer = 60;

shiftvisible = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    switch phase
    {
        case 1: //Checks for Mega Man
            ys = y;
            yspeed = 1;
            generalCollision();
            y = ys;
            if yspeed != 0
            {
                with objMegaman
                {
                    if global.GravityDir = 1 &amp;&amp; ground
                    {
                        if place_meeting(x,y+global.GravityDir,other.id)
                        {
                            other.phase = 2
                            other.GetY = other.y+16;
                            other.xs = other.x;
                            other.xspeed = 1;
                        }
                    }
                }
                yspeed = 0;
            }
            break;
        case 2: //Shake
            Timer += 1;
            if sign(x-xs) = sign(xspeed)
            {
                xspeed = -xspeed;
            }
            if Timer &gt; FallTimer
            {
                if x = xs
                {
                    phase = 3;
                    Timer = 0;
                    xspeed = 0;
                }
            }
            break;
        case 3: //Sink
            yspeed = min(2.65,GetY-y)
            if y = GetY
            {
                yspeed = 0;
                phase = 1;
            }
            break;
    }
}
else if dead
{
    phase = 1;
    Timer = 0;
    xspeed = 0;
    yspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
