<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMetallCannon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code (all optional):
//col = &lt;number&gt; (0 = green (default); 1 = game gear colouration;)

event_inherited();

respawn = true;

healthpointsStart = 4;
healthpoints = healthpointsStart;
contactDamage = 4;

//Enemy specific code
calibrateDirection();

radius = 80;
activated = false;
//Image variables
cooldownImageTimer = 0;
cooldownImageMax = 7;
popUporDown=false;
turnAroundBrightEyes=false;
turnAroundOffset=0;
imageOffset = 0;

col = 0;

//stores the weapon damage values
wpndmg[3] = 4; //HornetChaser
wpndmg[4] = 1; //HornetChaser
wpndmg[6] = 2; //GrabBuster
wpndmg[7] = 1; //TripleBlade
wpndmg[8] = 4; //WheelCutter
wpndmg[9] = 4; //SlashClaw
wpndmg[10] = 4; //Sakugarne
wpndmg[11] = 1; //SuperArrow
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_index=(7*col)+imageOffset; 

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    if turnAroundBrightEyes
    {
        activated = false;
        cooldownImageTimer+=1;
        if cooldownImageTimer &gt;= 7
        {
            cooldownImageTimer = 0;
            turnAroundOffset += 1;
        }
        switch (turnAroundOffset)
        {
            case 0 :
                imageOffset=2;
                break;
            case 1 :
                imageOffset=3;
                break;
            case 2: 
                imageOffset=5;
                break;
            case 3: 
                imageOffset=6;
                break;
            case 4: 
                image_xscale=image_xscale*-1;
                imageOffset=2;
                turnAroundOffset=0;
                cooldownImageTimer=0;
                turnAroundBrightEyes=false;
                break;
        }    
    }
    
    //Basic AI, if Mega Man is within range, activate gun. if mega man goes behind cannon, turn around.
   if instance_exists(target)
   {
        if (sign(target.x-x) = -image_xscale) &amp;&amp; imageOffset == 2 &amp;&amp; !turnAroundBrightEyes
        {
            turnAroundBrightEyes = true;
            cooldownImageTimer=0;     
        }   
        if !activated &amp;&amp; abs(target.x-x) &lt;= radius &amp;&amp; !turnAroundBrightEyes
        {
            activated = true;
        }
    }
    //rest of events follow whilst gun is activated.  
    if activated
    {
        cooldownImageTimer+=1; 
        //animation timer setup;
        switch (imageOffset)
        {
            case 0 :
                cooldownImageMax=56;
                mask_index = sprMetallCannon;
                break;
            case 1: 
                cooldownImageMax=10;
                mask_index = sprMetallCannon;
                break;
            case 2: 
                cooldownImageMax=22;
                mask_index = sprMetallCannon;
                break;
            case 3: 
                cooldownImageMax=6;
                break;
                mask_index = sprMetallCannon;
            case 4: 
                cooldownImageMax=10;
                mask_index = sprMetallCannonMask2;
                break; 
        }    
        
        if cooldownImageTimer == cooldownImageMax &amp;&amp; imageOffset &lt; 4
        {
            cooldownImageTimer = 0;
            imageOffset +=1-(popUporDown*2);
        }
        
        if cooldownImageTimer == cooldownImageMax &amp;&amp; imageOffset == 4
        {
            cooldownImageTimer = 0;
            imageOffset = 1;
        }
        
        if imageOffset == 4 &amp;&amp; !popUporDown
        {
            popUporDown = true;
            i = instance_create(x+image_xscale*12, sprite_get_ycenter()+7, objMetCannonShot);
            i.xspeed = image_xscale*2;
            i.image_index=col;
            playSFX(sfxMetallCannon);
        }
        if imageOffset == 0 &amp;&amp; popUporDown
        {
            popUporDown = false;
            activated = false;
        }
      
    }
    
    checkGround();
    gravityCheckGround();
    generalCollision();
    
    x+=xspeed;
    y+=yspeed;
}
else if dead
{
    calibrateDirection()
    xspeed = 0;
    yspeed = 0;
    image_index = 0;
    imageOffset=0;
    activated = false;
    popUporDown = false;
    mask_index = sprMetallCannon;
}

image_index=(7*col)+imageOffset;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !(imageOffset = 1 or imageOffset = 2 or imageOffset = 3 or imageOffset = 4)
{
    other.guardcancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
