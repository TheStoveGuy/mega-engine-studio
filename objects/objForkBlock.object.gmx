<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprForkBlock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtGimmick</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;

//Enemy specific code
action = 1;
actiontimer = 0;

myblock = instance_create(x,y,objSolidIndependent);

alarm[0] = 1;
dir = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with mysolid {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dir == noone {
    if dir = -1 {
        image_index = 3;
        actiontimer = 25;
    }
}
else {dir = 1;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    actiontimer += 1;
    iaction = action;
    switch(action) {
        case 1: //Wait
            if actiontimer = 100 {
                action += 1;
            }
            break;
        case 2:
        case 4:
        case 6:
        case 8: //Blink
            if actiontimer = 5 {
                action += 1;
                image_index += 1;
            }
            break;
        case 3:
        case 5:
        case 7: //Blink off
            if actiontimer = 5 {
                action += 1;
                image_index -= 1;
            }
            break;
        case 9: //Retract
            if actiontimer = 5 {
                action += 1;
                image_index += 1;
            }
            break;
        case 10: //Detract
            if actiontimer = 10 {
                action += 1;
                if image_index = 2 {
                    image_index += 3;
                }
                else {image_index -= 3;}
            }
            break;
        case 11: //Full out
            if actiontimer = 10 {
                action = 1;
                image_index -= 2;
            }
            break;
    }
    if action != iaction {actiontimer = 0;}
}
else if dead
{
    action = 1;
    if dir = -1
    {
        image_index = 3;
        actiontimer = 25;
    }
    else
    {
        image_index = 0;
        actiontimer = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objMegaman">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.canHit
{
    if image_index = 0 or image_index = 1
    {
        bx = 6; by = 0;
    }
    else if image_index = 3 or image_index = 5
    {
        bx = 0; by = 6;
    }
    else {exit;}
    
    if collision_rectangle(x-bx,y-by,x+15+bx,y+15+by,other.id,false,true)
    {
        with other playerGetHit(other.contactDamage);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
