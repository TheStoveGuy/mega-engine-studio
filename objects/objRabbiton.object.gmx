<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRabbiton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//creation code (all optional)
//back = &lt;boolean&gt; (false = appears in front; true = appears behind you)

event_inherited();

respawn = true;

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 3;

despawnRange = 32;

//Enemy specific code
back = false;

phase = 0;
range = 64;
timer = 0;

xSpd = 2;
ySpd = 4;

animBack = 0;
animPauseTimer = 0;
imgSpd = 0.2;
imgIndex = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead
{
    checkGround();
    gravityCheckGround();
    generalCollision();
    
    switch (phase)
    {
        //start facing mega man
        case 0:
            calibrateDirection();
            image_xscale = -image_xscale;
            phase = 1;
            
            if (back)
            {
                if (image_xscale &lt; 0)
                {
                    x = view_xview + view_wview;
                }
                else
                {
                    x = view_xview;
                }
            }
            
            var i;
            for (i = 0; i &lt; instance_number(objMegaman8Sled); i += 1)
            {
                sled = instance_find(objMegaman8Sled, i);
                if (sled.x &gt; view_xview &amp;&amp; sled.x &lt; view_xview + view_wview &amp;&amp; sled.y &gt; view_yview &amp;&amp; sled.y &lt; view_yview + view_hview)
                {
                    xspeed = sled.MaxSpeed * image_xscale;
                    break;
                }
            }
            
            if (!back)
            {
                xspeed -= image_xscale;
            }
            else
            {
                xspeed += image_xscale;
            }
            
            break;
        
        //skii, and wait to do stuff
        case 1:
            if (animPauseTimer &lt;= 0)
            {
                if (!animBack)
                {
                    imgIndex += imgSpd;
                    if (imgIndex &gt;= 5)
                    {
                        imgIndex = 4;
                        animBack = true;
                        animPauseTimer = 6;
                    }
                }
                else
                {
                    imgIndex -= imgSpd;
                    if (imgIndex &lt; 0)
                    {
                        imgIndex = 0;
                        animBack = false;
                        animPauseTimer = 6;
                    }
                }
            }
            else
            {
                animPauseTimer -= 1;
            }
            
            timer += 1;
            if (timer &gt;= 50)
            {
                timer = 0;
                
                if (choose(false, false, true) &amp;&amp; instance_exists(target))
                {
                    if ((image_xscale == 1 &amp;&amp; x &lt;= target.x - range) || (image_xscale == -1 &amp;&amp; x &gt;= target.x + range))
                    {
                        //phase = choose(
                        phase = 2;
                        imgIndex = 8;
                        animPauseTimer = 0;
                        yspeed = -ySpd;
                        xspeed += image_xscale * 2.5;
                    }
                    else if ((image_xscale == 1 &amp;&amp; target.x &lt; x) || (image_xscale == -1 &amp;&amp; target.x &gt; x))
                    {
                        phase = 3;
                        animPauseTimer = 0;
                        xspeed -= image_xscale;
                        imgIndex = 5;
                    }
                }
            }
            
            break;
        
        //twirl and jump
        case 2:
            imgIndex += imgSpd * 2;
            if (imgIndex &gt;= 12)
            {
                imgIndex = 8 + imgIndex mod 12;
            }
            
            if (ground)
            {
                if (timer &lt; 1)
                {
                    yspeed = -ySpd;
                    timer += 1;
                }
                else
                {
                    phase = 1;
                    timer = 0;
                    xspeed -= image_xscale * 2.5;
                }
            }
            
            break;
        
        //turn
        case 3:
            imgIndex += imgSpd * 2;
            if (imgIndex &gt;= 7)
            {
                imgIndex = 5 + imgIndex mod 7;
            }
            
            timer += 1;
            if (timer &gt;= 30)
            {
                phase = 1;
                xspeed -= image_xscale;
                imgIndex = 0;
                image_xscale = -image_xscale;
                
            }
            
            break;
    }
    
    x += xspeed;
    y += yspeed;
}
else if dead
{
    phase = 0;
    timer = 0;
    animPauseTimer = 0;
    imgIndex = 0;
}

image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
