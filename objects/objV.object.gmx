<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprV</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This enemy has a few behaviours depending on you want to ultilize him. In Mega Man 5, he appears stationary, but actually moves to the left to replicate the water bike speeding by.
//The default behaviour for this enemy is how it "appears" in Mega Man 5, but not how he is actually programmed. The below variables can be disabled to get any sort of effect you want with this enemy.

//Creation code (all optional):
//hasGravity=false; - use this to turn off this enemies' gravity effect.)
//isStationary=false; - use this to make the enemy move towards Mega Man ala Mega Man 5.)

event_inherited();

respawn = true;

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 4;

//Enemy specific code
calibrateDirection()
image_speed = 0.3;

hasGravity = true;
isStationary = true;

//stores the weapon damage values
wpndmg[4] = 3; //HornetChaser
wpndmg[5] = 3; //JewelSatellite
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    if hasGravity
    {
        checkGround();
        
        if !isStationary &amp;&amp; xspeed == 0 &amp;&amp; ground
        {
            xspeed=1*image_xscale;
        }
        
        gravityCheckGround();
        generalCollisionTurnaround();
        
        if place_meeting(x,y+yspeed,objWater)
        {
            yspeed -= 0.5;
            if yspeed &lt; 0 &amp;&amp; yspeed &gt;= -0.25 {yspeed = 0;}
        }
    }
    x += xspeed;
    y += yspeed;
}
else if dead
{
    calibrateDirection()
    xspeed = 0;
    yspeed = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
