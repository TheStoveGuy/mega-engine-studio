<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSpringFaceBomb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 3;

//Enemy specific
xspeed = 0;
yspeed = 0;
ground = 1;

phase = 0;
waitTimer = 0;
xs = 0;

animBack = false;
imgSpd = 0.35;
imgIndex = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{   
    if xs != 0 {xspeed = xs;}
    
    checkGround();
    gravityCheckGround();
    
    preground = ground;
    
    generalCollision();
    
    if !preground &amp;&amp; ground
    {
        playSFX(sfxBikkyLand);
        xs = 0;
        xspeed = 0;
        if phase = 3
        {
            phase = 4;
            imgIndex = 1;
        }
    }
    
    x += xspeed;
    y += yspeed;
    
    switch (phase)
    {
        case 0: //start facing mega man
            calibrateDirection();
            phase = 1;
            break;
        case 1: //wait
            if ground &amp;&amp; instance_exists(target)
            {
                waitTimer += 1;
                if (waitTimer &gt;= 24) //&lt;--wait time between jumps here
                {
                    waitTimer = 0;
                    phase = 2;
                    calibrateDirection();
                }
            }
            break;
        case 2: //spring animation before jumping
            if (!animBack)
            {
                imgIndex += imgSpd;
                if (imgIndex &gt;= 3)
                {
                    imgIndex = 2 - imgIndex mod 3;
                    animBack = true;
                }
            }
            else
            {
                imgIndex -= imgSpd;
                if (imgIndex &lt; 0)
                {
                    imgIndex = 4 + imgIndex;
                    waitTimer = 1; //used wait timer as a boolean    :P
                }
                
                if (waitTimer == 1 &amp;&amp; imgIndex &lt; 3)
                {
                    phase = 3;
                    yspeed = -3.4; //&lt;-- jump speed here
                    animBack = false;
                    imgIndex = 0;
                    xs = 2*image_xscale;
                }
            }
            break;
        case 4: //land
            if (!animBack)
            {
                imgIndex += imgSpd;
                if (imgIndex &gt;= 3)
                {
                    imgIndex = 2 - imgIndex mod 3;
                    animBack = true;
                }
            }
            else
            {
                imgIndex -= imgSpd;
                if (imgIndex &lt; 0)
                {
                    phase = 1;
                    imgIndex = 0;
                    animBack = false;
                }
            }
            break;
    }
}
else if dead
{
    phase = 0;
    waitTimer = 0;
    animBack = false;
    imgIndex = 0;
    xs = 0;
}

image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

a = instance_create(x, y - 8, objSpringFaceBombHead);
a.visible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
