<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMetall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;

//Enemy specific code
radius = 4 * 16; //Four blocks; the radius that MM needs to enter to trigger the shooting of the Met
cooldownTimer = 0;
canShoot = true;

animTimer = 0;
isFromMiniboss = false;

calibrateDirection();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    checkGround();
    gravityCheckGround();
    generalCollision();
    
    if instance_exists(target)
    {
        if xspeed == 0
        {
            calibrateDirection();
        }
        if distance_to_object(target) &lt;= radius
        {
            if canShoot
            {
                canShoot = false;
                image_index = 1;
            }
        }
    }
    
    if !canShoot
    {
        if animTimer == 0 &amp;&amp; cooldownTimer &lt;= 120 &amp;&amp; image_index &gt; 1
        {
            animTimer = 6;
            if image_index == 3
            {
                image_index = 4;
            }
            else if image_index == 4
            {
                image_index = 3;
            }
        }
        else {animTimer -= 1;}
        
        cooldownTimer += 1;
        
        if cooldownTimer == 8
        {
            image_index = 2;
            //Shoot
            var ID;
            ID = instance_create(x+image_xscale*8, sprite_get_ycenter(), objMM3MetBullet);
                ID.dir = 45;
                ID.xscale = image_xscale;
                ID.sprite_index = sprEnemyBullet;
            ID = instance_create(x+image_xscale*8, sprite_get_ycenter(), objMM3MetBullet);
                ID.dir = 0;
                ID.xscale = image_xscale;
                ID.sprite_index = sprEnemyBullet;
            ID = instance_create(x+image_xscale*8, sprite_get_ycenter(), objMM3MetBullet);
                ID.dir = -45;
                ID.xscale = image_xscale;
                ID.sprite_index = sprEnemyBullet;
                
            playSFX(sfxEnemyShoot);
        }
        else if cooldownTimer == 60
        {
            image_index = 3;
            animTimer = 6;
            xspeed = 1.5*image_xscale;
        }
        else if cooldownTimer == 100
        {
            image_index = 0;
            xspeed = 0;
            animTimer = 6;
        }
        else if cooldownTimer == 160
        {
            canShoot = true;
            cooldownTimer = 0;
        }
    }
    
    if isFromMiniboss
    {
        if instance_place(x+xspeed, y, objSolid)
        {
            instance_create(bbox_get_xcenter(),bbox_get_ycenter(),objExplosion);
            instance_destroy();
        }
    }
    
    xs = xspeed;
    if !ground
    {
        xspeed = 0;    
    }
    
    x += xspeed;
    y += yspeed;
    
    xspeed = xs;
}
else if dead
{
    cooldownTimer = 0;
    canShoot = true;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if image_index == 0 {
    other.guardcancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
