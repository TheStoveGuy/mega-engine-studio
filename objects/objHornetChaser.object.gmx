<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHornetChaser</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

wpnID = 4; //Weapon ID

ammo_cost = 1;

image_speed = 0.3;

penetrate = 0;
pierces = 1;

xspeed=0;
yspeed=0;
grav=0;

speed = 2;
chase = 0;
pickup = 0;

alarmchase = 20;

playSFX(sfxHornetChaser);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen
{
    if alarmchase
    {
        alarmchase -= 1;
        if !alarmchase
        {
            chase = 1;
        }
    }
    
    x += xspeed;
    y += yspeed;
    
    if ricochet 
    {
        chase = 0;
        alarmchase = -1;
    }
    
    if !pickup &amp;&amp; instance_exists(parent) //Collect pickups
    {
        if place_meeting(x,y,prtPickup) 
        {
            pickup = instance_place(x,y,prtPickup);
            if pickup.grabable
            {
                pickup.depth = depth-1;
                with object_index
                {
                    if id != other.id
                    {
                        if pickup = other.pickup {other.pickup = 0;}
                    }
                }
            }
            else {pickup = 0;}
        }
    }
    if pickup //Control collected pickup
    {
        if instance_exists(pickup) 
        {
            pickx = sprite_get_xcenter_object(pickup)-pickup.x;
            picky = sprite_get_ycenter_object(pickup)-pickup.y;
            pickup.x = x-pickx+8*image_xscale; pickup.xspeed = 0;
            pickup.y = y-picky+6; pickup.yspeed = 0;
        }
        else {pickup = 0;}
    }
    
    if chase
    {
        dis = view_wview; chaseobj = 0;
        
        if pickup &amp;&amp; instance_exists(parent)
        {
            chaseobj = parent;
        }
        else 
        {
            with prtEnemy //Find closest enemy
            {
                if !dead 
                {
                    if canHit 
                    {
                        if insideView() 
                        {
                            if distance_to_object(other) &lt; other.dis
                            {
                                other.dis = distance_to_object(other); other.chaseobj = id;
                            }
                        }
                    }
                }
            }
            with prtPickup //Find closest Item
            {
                if grabable &amp;&amp; !place_meeting(x,y,objHornetChaser)
                {
                    if insideView()
                    {
                        if distance_to_object(other) &lt; other.dis
                        {
                            other.dis = distance_to_object(other); other.chaseobj = id;
                        }
                    }
                }
            }
        }
        
        if chaseobj &amp;&amp; instance_exists(chaseobj) //Round direction to target direction
        {
            correctDirection(round(point_direction(x,y,sprite_get_xcenter_object(chaseobj),sprite_get_ycenter_object(chaseobj))),12);
        }
        
        if direction &gt; 90 &amp;&amp; direction &lt;= 270
        {
            image_xscale = -1;
        }
        else
        {
            image_xscale = 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
