<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code:
//HitInvun = 45;   Set the length of the hit invulnerablilty of the boss. If this is 1 or lower, they don't have any.

event_inherited();

behaviourType = 2;

startIntro = false;
isIntro = false;
startFight = false;
isFight = false;

boss = 1;

xspeed = 0;
yspeed = 0;
image_xscale = -1;
image_speed = 0;
image_index = 0;

healthIndex = 1;
healthpoints = 1;
canHit = true;
drawHitSpark = false;
drawBoss = true; //Should we be visible? (Can't use the 'visible' variable as this prevents the Draw event from executing)
rememberDepth = depth; //for the MM6 intro fade to go under the health bar.

dead = false;

itemDrop = noone;

IntroType = 0;
IntroFade = 0;
Drop = 0;
Dropkey = 0;
ElementNum = 1;

StopAllMusic = false;

stopOnFlash = false;
weakToFlash = false;HitInvun = 45;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canHit = true;
drawBoss = true;
drawHitSpark = false;

alarm[9] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Hitspark
drawHitSpark = !drawHitSpark;
drawBoss = !drawBoss;

alarm[9] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !global.frozen 
{
    setTargetStep();
    
    //Starting the intro pose (and falling down)
    if startIntro == true
    {
        startIntro = false;
        isIntro = true;
        visible = true;
        calibrateDirection();
    }
    
    if isIntro == true
    {
        x += xspeed;
        y += yspeed;
        with prtPlayerProjectile { instance_destroy() }
        playerLockMovement();
        if y &lt; ystart
        {
            if IntroType == 0
                gravityNoGround();
            else
            {
                if IntroFade &lt; 0.5
                    IntroFade += 0.5/10;
                else
                    yspeed = 1;
            }
        }
        else
        {
            if IntroFade &gt; 0
                IntroFade -= 0.5/10;
            y = ystart;
            sprite_index = pose;
            
            yspeed = 0;
            
            if image_speed == 0
            {
                image_index = 0;
            }
            image_speed = poseImgSpeed;
            
            if image_index &gt;= image_number-1
            {
                image_index = image_number-1;
                image_speed = 0;
                isIntro = false;
            }
        }
    }

    
    
    //Starting the actual fight
    if startFight
    {
        startFight = false;
        isFight = true;
    }
    
    /*if stopOnFlash == false or isFight == false
    {
        if global.flashStopper and weakToFlash == true
        {
            //MEMES
        }
        else
        {*/
        //}
    //}
}
else
{
    //if alarm[9] != -1
    //    alarm[9] += 1;
    //if alarm[10] != -1
    //    alarm[10] += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if isIntro { other.guardcancel = 2; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.bossHealth[1] = 0;
if StopAllMusic {
    stopMusic();
    audio_stop_all();
}
playSFX(sfxDeath);

var i, explosionID;
for (i=0; i&lt;8; i+=1;) {
    explosionID = instance_create(bbox_get_xcenter(),bbox_get_ycenter(),objMegamanExplosion);
    explosionID.dir = i*45;
    explosionID.spd = 0.75;
}
for (i=0; i&lt;8; i+=1;) {
    explosionID = instance_create(bbox_get_xcenter(),bbox_get_ycenter(),objMegamanExplosion);
    explosionID.dir = i*45;
    explosionID.spd = 1.5;
}
global.bossTextShown = false;

if itemDrop != noone
{
    Drop = 1;
    if itemDrop == objKey
    {
        i = instance_create(bbox_get_xcenter()-8,bbox_get_ycenter()-8,objKey);
        with i
        {
            yspeed = -4;
            homingTimer = 90;
            playSFX(sfxKeySpawn);
        }
    }
    else { instance_create(bbox_get_xcenter(),bbox_get_ycenter(),itemDrop); }
}

if Drop == 0 
{   
    a = instance_create(bbox_get_xcenter()-8,bbox_get_ycenter()-8,objEnergyElement);
    with a
    {
        elementNumber = other.ElementNum;
    }
}
else {
    global.LockTransition = false;
    if Drop == 2 {
        instance_create(bbox_get_xcenter()-8,bbox_get_ycenter()-8,objLifeEnergyBig);
    }
    if StopAllMusic {
        playMusic(global.LevelSong,global.LevelLoop,global.LevelVolume);
        if global.LevelLoop == true {
            setMusicLoop(global.LevelLoopStart, global.LevelLoopEnd);
        }
    }
}

if Dropkey {
    i = instance_create(bbox_get_xcenter()-8,bbox_get_ycenter()-8,objKey);
    with i
    {
        yspeed = -4;
        homingTimer = 90;
        playSFX(sfxKeySpawn);
    }
}

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if isIntro &amp;&amp; IntroType == 1
{
    depth = 11;
    draw_set_alpha(IntroFade);
    draw_set_color(c_black);
    draw_rectangle(view_xview,view_yview,view_xview+view_wview,view_yview+view_hview,0);
    draw_set_alpha(1);
}
else
if depth == 11
    depth = rememberDepth;

if drawBoss
{
    drawSelf();
}
    
if drawHitSpark
{
    draw_sprite_ext(sprHitspark, 0, sprite_get_xcenter(), sprite_get_ycenter(), 1, 1, 0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
