<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprExplosion</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code (all optional):
//gravityFlip = true;   -  determine the direction of where this sits. if true, it starts on the cieling.)

event_inherited();

respawn = false;

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 0;

//Enemy specific code
alarmtime = 0;
canHit = -1;

en = -1;
ex = -1;
ey = -1;

enx = x;
eny = y;

lines = 0;
dir = 1;

spawntime = 56;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead
{
    alarmtime += 1;
    if alarmtime = 1
    {
        i = instance_create(ex,ey,en);
        with i
        {
            other.enx = bbox_get_xcenter();
            other.eny = bbox_get_ycenter();
            other.sprite_index = sprite_index;
            other.image_index = image_index;
            other.image_xscale = image_xscale;
            other.image_yscale = image_yscale;
            instance_destroy();
        }
    }
    /*if !(alarmtime mod 16)
    {
        for (i=0; i&lt;8; i+=1;)
        {
            z = instance_create(enx,eny,objExplosion);
            with z
            {
                motion_set(45*other.i,1.5)
            }
        }
    }*/
    if alarmtime &gt;= spawntime
    {
        i = instance_create(ex,ey,en);
        i.respawn = 0;
        with i
        {
            if despawnRange != -1
            {
                despawnRange += sprite_height;
            }
            if room = lvlEnemyArena
            {
                healthpointsStart = ceil(healthpointsStart*0.66);
                healthpoints = healthpointsStart;
            }
        }
        event_user(0);
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj = i.object_index;

if obj = objBigFish or obj = objM422A
{
    i.popDelay = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imgx = image_xscale;
image_xscale = 1;
imgy = image_yscale;
image_yscale = 1;

for (i=0+lines; i&lt;sprite_height; i+=2;)
{
    draw_sprite_part_ext(sprite_index,image_index,0,i,sprite_width,1,ex-sprite_xoffset*imgx+round((spawntime-alarmtime)/4)*dir,ey-sprite_yoffset*imgy+i,imgx,imgy,image_blend,image_alpha);
}

if !(alarmtime mod 4)
{
    dir = -dir;
}
lines = !lines;

image_xscale = imgx;
image_yscale = imgy;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
