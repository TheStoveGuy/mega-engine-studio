<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprYambow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 3;

//Enemy specific code
state = 0;
actionTimer = 0;
bounceTimer = 0;

image_speed = 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    if instance_exists(target)
    {
        x += xspeed;
        y += yspeed;
        
        if state == 1 or (state == 4 and actionTimer &gt; 15)
        {
            gravityNoGround();
            gravityNoGround();
        }
        if state == 2 or state == 5
        {
            bounceTimer += 1;
            if bounceTimer &lt; 4
            {
                y += 1.5;
            }
            else if bounceTimer &gt; 4 and bounceTimer &lt; 9
            {
                y -= 1.5;
            }
            else if bounceTimer == 20
            { 
                state += 1;
                calibrateDirection();
                xspeed = 3.5*image_xscale;
                bounceTimer = 0;
            }
        }
        
        if collision_rectangle(x-96,y-224,x+96,y+224,target,false,true) &amp;&amp; state == 0 {
            calibrateDirection();
            state = 1;
            yspeed = 1;
        }
        if collision_rectangle(x-256,y-224,x+256,y+64,target,false,true) &amp;&amp; state == 1 {
            state = 2;
            yspeed = 0;
        }
        if state == 3 &amp;&amp; ((image_xscale == 1 &amp;&amp; x &gt; target.x+32) or (image_xscale == -1 &amp;&amp; x &lt; target.x-32)) {
            xspeed = 0;
            calibrateDirection();
            state = 4;
        }
        if state == 4 
        { 
            actionTimer += 1; 
            if actionTimer == 15
            {
                yspeed = 1;
            }
            if collision_rectangle(x-256,y-224,x+256,y,target,false,true)
            {
                state = 5;
                yspeed = 0;
            }
        }   
    }
}
else if dead
{
    state = 0;
    bounceTimer = 0;
    actionTimer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if state
{
    event_inherited();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
