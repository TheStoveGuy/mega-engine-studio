<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprProptop</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code (all optional):
//col = &lt;number&gt; (0 = red (default); 1 = green)

event_inherited();

respawn = true;

healthpointsStart = 5;
healthpoints = healthpointsStart;
contactDamage = 4;

//Enemy specific code
col = 0; //0 = red; 1 = green;
init = 1;

moveTimer = 0;
animEndme = 0;

floating = false;
floatTimer = 0;
xs = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if init
{
    init = 0;
    switch col
    {
        case 0: sprite_index = sprProptop; break;
        case 1: sprite_index = sprProptopGreen; break;
        default: sprite_index = sprProptop; break;
    }
}

event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    checkGround();
    if ground {
        moveTimer += 1;
        if moveTimer &gt;= 70 {
            floating = true;
            yspeed = -1;
        }
    }
    else {
        moveTimer = 0;
    }
    
    if floating {
        floatTimer += 1;
        if floatTimer &gt;= 64 {
            calibrateDirection();
            floatTimer = 0;
            floating = false;
            yspeed = -3;
            xSpeedAim(target, yspeed, gravAccel);
            xs = xspeed;
        }
    }
    
    xspeed = xs;
    
    checkGround();
    if !floating {
        gravityCheckGround();
    }
    ys = yspeed;
    generalCollision();
    
    x += xspeed;
    y += yspeed;
    
    animEndme += 1;
    if animEndme &gt;= 8 {
        if yspeed &lt; 0 {
            if image_index == 2 {
                image_index = 3;
            }
            else {image_index = 2;}
        }
        else {
            if image_index == 0 {
                image_index = 1;
            }
            else {image_index = 0;}
        }
        animEndme = 0;
    }
    
    if ground {
        if ys != 0 &amp;&amp; yspeed = 0 {
            xspeed = 0;
            xs = 0;
            playSFX(sfxHeavyLand);
        }
    }
    else {
        moveTimer = 0;
    }
}
else if dead
{
    moveTimer = 0;
    animEndme = 0;
    floating = false;
    floatTimer = 0;
    xs = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
