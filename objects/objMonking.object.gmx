<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMonking</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 4;

//Enemy specific code
hasPopped = false;
onBlock = false;
animTimer = 0;
hangCountdown = 180;

collision = false;
jumpTimer = 0;
doGravity = false;

despawnRange = 48;

contactStart = contactDamage;

calibrateDirection();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper {
    //Appears
    if !hasPopped &amp;&amp; collision_rectangle(x-64,y-224,x+64,y+224,target,false,true) {
        calibrateDirection();
        hasPopped = true;
        image_index = 0;
        yspeed = -3;
    }
    else {
        if !onBlock &amp;&amp; collision_rectangle(x,y-8,x,y-7,objSolid,false,true) &amp;&amp; hangCountdown == 180 {
            onBlock = true;
            yspeed = 0;
            image_index = 2;
        }
    }
    //Swing on block
    if onBlock {
        animTimer += 1;
        if animTimer == 8 {
            image_index += 1;
            if image_index = 6 {
                image_index = 2;
            }
            animTimer = 0;
        }
        if hangCountdown {
            hangCountdown -= 1;
        }
        if hangCountdown == 0 {
            calibrateDirection();
            animTimer = 0;
            image_index = 0;
            onBlock = false;
            doGravity = true;
            xspeed = image_xscale;
            yspeed = -7;
        }
    }
    if doGravity {
        checkGround();
        gravityNoGround();
    }
    if !collision {
        if hangCountdown == 0 &amp;&amp; !onBlock &amp;&amp; yspeed &gt; 0 {
            collision = true;
        }
    }
    if collision {
        generalCollision();
        if ground {
            xspeed = 0;
            image_index = 1;
            jumpTimer += 1;
            if jumpTimer == 60 {
                calibrateDirection();
                jumpTimer = 0;
                y -= 4;
                yspeed = -4;
                xspeed = image_xscale*2;
            }
        }
        else {
            image_index = 0;
        }
    }
    
    x += xspeed;
    y += yspeed;
}
else if dead {
    calibrateDirection()
    hasPopped = false;
    onBlock = false;
    hangCountdown = 180;
    collision = false;
    jumpTimer = 0;
    animTimer = 0;
    yspeed = 0;
    xspeed = 0;
    doGravity = false;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hasPopped
{
    event_inherited();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
