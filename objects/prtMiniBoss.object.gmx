<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

dir = 1;

doesIntro = true;
rescursiveExplosion = true;
preventDeath=false;
deadTimer = 0;
IntroSprite = sprHotDogTeleport;
IntroTimer = 288+15; //288 is the height above, 15 is the extra frames for teleporting in.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if IntroTimer &gt; 0 &amp;&amp; doesIntro
{
    if insideView()
    {
        if IntroTimer &gt; 10
        {
            IntroTimer -= 8
        }
        else
        {
            IntroTimer -= 1;
        }
    }
    exit;
}

//"Die" (doesn't actually destroy the enemy though)
if healthpoints &lt;= 0
{
    beenOutsideView = false;
    dead = true;    //Enemies don't actually destroy themselves, they become invisible and all collision is neglected
    xspeed = 0;
    yspeed = 0;
}

//Respawning
if respawn
{
    if beenOutsideView
    {
        if insideView()
        {
            visible = true;
            dead = false;
            healthpoints = healthpointsStart;
            beenOutsideView = false;
            preventDeath=false;
        }
    }
}
else if dead {
    instance_destroy(); //If we can't respawn, there's no point to still be able to execute any code. Destroying the instance saves memory and processing power
}

if !insideView() &amp;&amp; despawnRange != -1 
{
    beenOutsideView = true;
    
    x = xstart;
    y = ystart;
    healthpoints = 0;
    dead = true;
    visible = false;
    xspeed = 0;
    yspeed = 0;
    preventDeath=true;
}
    
    
if dead &amp;&amp; !preventDeath &amp;&amp; insideView()
{
    xspeed = 0;
    yspeed = 0;
    if visible == true {
        visible = false;
    }
    else {
        visible = true;
    }
    if rescursiveExplosion {    
        deadTimer += 1;
        if floor(deadTimer/5)*5 == deadTimer {
            playSFX(sfxExplosion);
            randomize();
            inst = instance_create(x+irandom_range(-(sprite_width/2),(sprite_width/2)),y+irandom_range(-(sprite_height/2)+16,(sprite_height/2)-16),objBigExplosion);
            with (inst) {
                image_speed=1/3;
            }
        }
        if deadTimer &gt;= 60 {
            instance_destroy();
        }
    }
    else {
        deadTimer += 1;
        if deadTimer &gt;=2 {
            playSFX(sfxExplosion);
            inst = instance_create(sprite_get_xcenter(), sprite_get_ycenter(),objBigExplosion);
            with (inst) {
                image_speed=1/3;
            }
            instance_destroy();
        }
    }
}
else if !insideView() &amp;&amp; deadTimer &gt; 0 &amp;&amp; !rescursiveExplosion
{
    instance_destroy();
}
else
{
    deadTimer=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dead = 1;

if itemDrop == noone { exit; }

if itemDrop == objKey
{
    i = instance_create(bbox_get_xcenter()-8,bbox_get_ycenter()-8,objKey);
    i.yspeed = -4;
    i.homingTimer = 90;
    playSFX(sfxKeySpawn);
}
else { instance_create(bbox_get_xcenter(),bbox_get_ycenter(),itemDrop); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if IntroTimer &gt; 0 &amp;&amp; doesIntro
{
    draw_sprite(IntroSprite,2-(min(2,min(IntroTimer,15)/5)),x,y-max(IntroTimer-10,0));
}
else
{
    event_inherited();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
