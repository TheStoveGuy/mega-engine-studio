<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSkullWalker</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 2;

//Enemy specific code
phase = 0;
waitTimer = 0;

spd = 1.7;
xspeed = 0;
yspeed = 0;

animBack = false;
imgSpd = 0.2;
imgIndex = 0;
image_speed = 0;
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{   
    checkGround();
    generalCollision();
    gravityCheckGroundExt(0.2);
    
    x += xspeed;
    y += yspeed;
    
    switch (phase)
    {
        case 0: //start facing mega man
            calibrateDirection();
            phase = 1;
            break;
        case 1: //wait
            waitTimer += 1;
            if (waitTimer &gt;= 10)
            {
                waitTimer = 0;
                phase = 2;
            }
            break;
        case 2: //look around
            if (!animBack)
            {
                imgIndex += imgSpd * 0.7;
                if (imgIndex &gt;= 3)
                {
                    imgIndex = 2 - imgIndex mod 3;
                    animBack = true;
                }
            }
            else
            {
                imgIndex -= imgSpd;
                if (imgIndex &lt; 0){
                    phase = 3;
                    imgIndex = 3;
                    animBack = false;
                    calibrateDirection();
                    xspeed = image_xscale; //so it doesn't trigger phase 4 when it starts
                }
            }
            break;
        case 3: //run around
            //animation
            if (!animBack)
            {
                imgIndex += imgSpd;
                if (imgIndex &gt;= 6)
                {
                    imgIndex = 5 - imgIndex mod 6;
                    animBack = true;
                }
            }
            else
            {
                imgIndex -= imgSpd;
                if (imgIndex &lt; 3)
                {
                    imgIndex = 4;
                    animBack = false;
                }
            }
            //detection
            if (xspeed == 0 || !place_meeting(x + sprite_width / 2, bbox_bottom + 1, objSolid))
            {
                //jump
                phase = 4;
                yspeed = -3.8; //&lt;-- jump speed here
                imgIndex = 6;
                animBack = false;
            }
            else if (instance_exists(target))
            {
                //turn around
                if (abs(x - target.x) &gt; 40)
                {
                    calibrateDirection();
                }
            }
            xspeed = spd * image_xscale;
            break;
        case 4: //jump
            if (ground)
            {
                xspeed = 0;
                //I used wait timer as a boolean    :P
                if (waitTimer == 0)
                {
                    waitTimer = 1;
                    playSFX(sfxClamp);
                }
                imgIndex += imgSpd;
                if (imgIndex &gt;= 8)
                {
                    phase = 1;
                    imgIndex = 0;
                }
            }
            else {xspeed = spd * image_xscale;}
            break;
    }
}
else if dead
{
    phase = 0;
    waitTimer = 0;
    xspeed = 0;
    yspeed = 0;
    animBack = false;
    imgIndex = 0;
}

image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
