<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRotatingSpikePlatform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtGimmick</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

image_speed = 0;
image_index = 0;
canDrop = true;
phase = 0;
timer = 0;
timeri = 0;

respawnRange = -1;
despawnRange = -1;

solidID = instance_create(x, y, objSolidIndependent);
solidID.sprite_index = sprite_index;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper {
    if image_index = 0 {ys = -1;}
    else {ys = 1;}
    switch phase {
        //Idle
        case 0:
            if place_meeting(x,y+ys,target)
            {
                phase = 4;
                timer = 0;
            }
            break;
        // Preparing to rotate
        case 1:
            timer += 1;
            if timer &gt;= 12
            {
                timer = 0;
                if image_index == 0
                    phase = 2;
                else
                    phase = 3;
            }
            break;
        // First rotation
        case 2:
            timer += 1;
            if timer == 4
            {
                image_index += 1;
                if image_index == 4 {
                    phase = 0;
                }
                timer = 0;
            }
            break;
        // Second Rotation
        case 3:
            timer += 1;
            if timer == 4
            {
                image_index += 1;
                if image_index &gt;= image_number
                    image_index = 0;
                if image_index == 0 {
                    phase = 0;
                }
                timer = 0;
            }
            break;
        // Mega man check
        case 4:
            if !place_meeting(x,y+ys,target)
            {
                phase = 1;
            }
            break;
    }
    if (place_meeting(x,y+1,target) &amp;&amp; image_index == 0)
    or (place_meeting(x,y-1,target) &amp;&amp; image_index == 4)
    {
        if target.canHit
        {
            with target playerGetHit(2);
        }
    }
    if (image_index == 0 || image_index == 4)
    {
        if !instance_exists(solidID)
        and !place_meeting(x,y,target)
        {
            solidID = instance_create(x, y, objSolidIndependent);
            solidID.sprite_index = sprite_index;
        }
    }
    else
    {
        if instance_exists(solidID)
        {
            with solidID instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="prtPlayerProjectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*with (other){
    if (penetrate == 0 &amp;&amp; ricochet == 0) {
        event_user(10);
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
