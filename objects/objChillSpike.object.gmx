<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprChillSpike</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

contactDamage = 0;

reflectable = 0;

imageTimer = 0;
imageReset = 0;

imageMax = 2;
hasGravity = true;

ground = false;
toWall = false;
flag = false;
spreadAttack = false;

gravStr = 0.25;
image_speed = 0;

//if yspeed == -5
    //ySpeedAim(objChillSpikeDetector.y, gravAccel);

image_index = imageReset;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(objChillMan)
{
    instance_destroy(); exit;
}

if !global.frozen
{
    x += xspeed;
    y += yspeed;
    
    mm = instance_place(x,y,objMegaman);
    if instance_exists(mm) &amp;&amp; !global.timeStopped
    {
        playSFX(sfxChillSpikeLand);
        global.playerHealth[mm.player_id] -= 2;
        with mm
        {
            playerTimeStopped();
            freezetimer = 60;
            isfrozen = 1;
            playerHandleSprites('Normal');
            event_user(0);
        }
        instance_destroy(); exit;
    }
    
    if !toWall &amp;&amp; !flag &amp;&amp; !spreadAttack
    {
        yspeed = -3;
        xSpeedAim(objChillSpikeDetector, yspeed, gravStr);
        flag = true;
    }
    else if !flag &amp;&amp; spreadAttack
    {
        var angle;
        angle = direction;
        xspeed = cos(degtorad(angle)) * 6;
        yspeed = -sin(degtorad(angle)) * 6;
        gravStr = 0;
        flag = true;
        with objChillSpikeDetector
        {
            instance_destroy();
        }
    }    
    else if !flag
    {
        ySpeedAim(objChillSpikeDetector.y-24, gravStr);
        xSpeedAim(objChillSpikeDetector, yspeed, gravStr);
        gravStr = 0.20;
        flag = true;
        with objChillSpikeDetector
        {
            instance_destroy();
        }
    }    
        
    imageTimer +=1
    
    if hasGravity
    {
        checkGroundExt(1);
        gravityCheckGroundExt(gravStr);
        generalCollisionExt(1);
    }
    
    if imageTimer == 3 &amp;&amp; image_index &lt; imageMax
    {
        image_index += 1;
        imageTimer = 0;
    }
    if imageTimer == 3 &amp;&amp; image_index == imageMax
    {
        image_index = imageReset;
        imageTimer = 0;
    }
        
    if ground &amp;&amp; !toWall
    {
        playSFX(sfxChillSpikeLand);
        cS = instance_create(x,y+9,objChillSpikeSpike);
        cS.respawn = false;
        instance_destroy();
    }
    if xspeed == 0 &amp;&amp; toWall
    {
        playSFX(sfxChillSpikeLand);
        cS = instance_create(x+speed+(9*image_xscale),y,objChillSpikeSpike);
        cS.sprite_index = sprChillSpikeWall;
        cS.image_xscale = image_xscale*-1;
        cS.respawn = false;
        for (i = 0; i &lt; 16; i += 1) 
        {
            with cS
            {
                if !instance_place(x,y,objSolid)
                {
                    x -= image_xscale;
                }
            }
            
        }
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
