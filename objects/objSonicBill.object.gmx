<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSonicBill</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

calibrateDirection()
respawn = true;

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;

//Enemy specific code
xspeed = 0;
yspeed = 0;
image_speed = 0;
image_index = 0;
activated=false;
radius=80;
explod=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper 
{
    xs = xspeed;
    
    checkGround();
    gravityCheckGround();
    generalCollision();
    
    if xspeed = 0 &amp;&amp; xs != 0
    {
        explod=true;
    }
    
    x += xspeed;
    y += yspeed;
    
    if xspeed == 0 &amp;&amp; yspeed == 0
    {
        calibrateDirection();
    } 
    
    if xspeed == 0 &amp;&amp; yspeed == 0 &amp;&amp; activated
    {
        xspeed = 2*image_xscale;
        image_index=1;
    }
    if yspeed != 0 &amp;&amp; image_index=0
    {
        xspeed=0;
    }
    
    if instance_exists(target)
    {
        // basic AI, if Mega Man is within range, activate bounder.  
        if abs(target.x-x) &lt;= radius
        {
            activated = true;
        }
        // if Sonic Bill is greater than Mega Man's x co-orderinates, explode.
        if sign(xspeed) = -sign(target.x-x)
        {
            explod=true;
        }
        if place_meeting(x,y,target) // if Sonic Bill HITS Mega Man, explode.
        {
            explod=true;
        }
    }   
   
    if explod
    {
         instance_create(bbox_get_xcenter(), bbox_get_ycenter(), objHarmfulExplosion);
         playSFX(sfxMM3Explode);
         visible = false;
         dead = true;
         healthpoints = 0;
     }
}
else if dead
{
    calibrateDirection();
    xspeed = 0;
    yspeed = 0;
    image_index = 0;
    explod=false;
    activated=false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
