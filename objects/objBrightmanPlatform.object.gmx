<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBrightPlatformDrop</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtMovingPlatformJumpthrough</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// note: if you want the platform to not fall, put the next line in the creation code 
// sprite_index = sprBrightPlatform 
// or
// sprite_index = sprBrightPlatformGreen

// Wait = ;
// Direction = ; (1 = start on left, -1 start on right)

event_inherited();

respawn = true;

image_speed = 0.2;
Offset = 0;

Wait = 5;
Distance = 16*3;
Direction = 1;
init = 1;
    
Phase = 0;
WaitMemory = Wait;
StartDistance = Distance;
StartDirection = Direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if init
{
    init = 0;
    
    WaitMemory = Wait;
    StartDistance = Distance;
    StartDirection = Direction;
    
    x = x+(cos(((Offset*360)/180)*pi)*Distance)
    y = (y-8)-(sin(((Offset*360)/180)*pi)*Distance);
    
    if sprite_index != sprBrightPlatformDrop
    {
        respawnRange = -1;
        despawnRange = -1;
    }
}

event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    if Phase = 0
    {
        with target
        {
            if place_meeting(x,y+1,other.id) &amp;&amp; ground
            {
                if !place_meeting(x,y,other.id)
                {
                    other.Phase = 1;
                }
            }
        }
    }
    if Phase != 0 
    {
        if Phase = 1
        {
            if Offset &lt; 0.5
                Offset += 0.5/(20+sin(Offset*pi*2)*80);
            else
                Phase = 2;
        }
        if Phase = 2
        {
            if sprite_index = sprBrightPlatformDrop
            {
                if yspeed &lt; 0
                    yspeed = 0;
                yspeed += 0.3;
                xspeed = 0;
            }
            else
            {
                yspeed = 0;
                if Wait &gt; 0
                    Wait -= 1;
                else
                {
                    Wait = WaitMemory;
                    if Offset &gt; 0
                        Phase = 3;
                    else
                        Phase = 1;
                }
            }
        }
        if Phase = 3
        {
            if Offset &gt; 0
                Offset -= 0.5/(20+sin(Offset*pi*2)*80);
            else
                Phase = 2;
        }
    }
    if Phase != 2
    {
        xspeed = (((xstart+Distance*Direction)+cos((((Offset-0.5)*360)/180)*pi)*Direction*Distance)) -x;
        yspeed = ((ystart-8)+abs(sin( ( ( (Offset-0.5)*360) /180)*pi)*Distance)) -y;
    }
}
else if dead
{
    Phase = 0;
    yspeed = 0;
    xspeed = 0;
    Offset = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
