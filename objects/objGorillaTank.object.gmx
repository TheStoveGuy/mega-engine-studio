<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGorillaTank</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtMiniBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code (all optional):
//dir = &lt;number&gt; (1 = face right (default); -1 = face left)

event_inherited();

respawn = true;

healthpointsStart = 24;
healthpoints = healthpointsStart;
contactDamage = 6; // 4 punch, 2 shot
doesIntro = false;

//creation code
dir = 1;
alarm[0] = 1;

//Enemy specific code
shootTimer = 0;
image_speed = 0;

Hand = noone;
recoil = false;
attack = choose(0,1);
attack = 1;
animTimer = 0;
IntroTimer = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (dir == 1)
{
    image_xscale = 1;
}
else
{
    image_xscale = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper &amp;&amp; IntroTimer &lt;= 0
{
    if recoil
    {
        if (image_xscale = -1 &amp;&amp; x &lt; xstart)
        or (image_xscale = 1 &amp;&amp; x &gt; xstart)
            {
            x -= image_xscale*3;
            if instance_exists(Hand)
                {
                if Hand.xspeed == 0
                and Hand.yspeed == 0
                and Hand.dir == 1
                    Hand.x -= image_xscale*3;
                }
            }
        recoil = false;
    }
    
    if instance_exists(Hand)
        if Hand.attack == false
            shootTimer += 1;
    
    if shootTimer &gt;= 60
        {
        if attack == 0
            {
            if instance_exists(Hand)
                Hand.attack = true;
            shootTimer = 0;
            attack = choose(0,1);
            }
        else
        if attack == 1
        {
        if shootTimer == floor(shootTimer/8)*8
            {
            playSFX(sfxEnemyShoot);
            shoot = instance_create(x+16*image_xscale,y-10,objEnemyBullet);
            with shoot
                {
                var spd;
                spd = 2;
                {
                    var angle;
                    angle = point_direction(sprite_get_xcenter(), sprite_get_ycenter(), sprite_get_xcenter()+16*other.image_xscale, sprite_get_ycenter()-(other.shootTimer-80));
                    
                    xspeed = cos(degtorad(angle)) * spd;
                    yspeed = -sin(degtorad(angle)) * spd;
                }
                }
            }
        if shootTimer &gt;= 60+(8*5)
            {
            shootTimer = 0;
            attack = choose(0,1);
            }
        }
        }
    
    if (x &gt; view_xview+64 &amp;&amp; image_xscale == -1)
    or (x &lt; view_xview+view_wview-64 &amp;&amp; image_xscale == 1)
    if instance_exists(Hand)
    and !(attack == 1 &amp;&amp; shootTimer &gt; 60)
        {
        if Hand.xspeed == 0
        and Hand.yspeed == 0
        and Hand.dir == 1
            {
            x += image_xscale/5;
            Hand.x += image_xscale/5;
            }
        }
    
    if animTimer &lt; 5
        animTimer += 1;
    else
        {
        if image_index &lt; 2
            image_index += 1;
        else
            image_index = 0;
        animTimer = 0;
        }
    
    if shootTimer == 60*3
        {
        }
    if instance_exists(Hand)
        {
        Hand.GetX = x-4*image_xscale;
        Hand.GetY = y;
        }
}
else if !insideView()
{
    image_index = 0;
    shootTimer = 0;
}

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper &amp;&amp; IntroTimer &gt; 0
{
    IntroTimer -= 1;
    if IntroTimer == 1
    {
    if !instance_exists(Hand)
    {
    Hand = instance_create(x-4*image_xscale,y,objGorillaTankHand);
    Hand.Parent = id;
    Hand.image_xscale = image_xscale;
    }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !collision_rectangle(x,y-20,x+(44*image_xscale),y-32,other.id,false,true)
{
    other.guardcancel = 1;
    recoil = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if instance_exists(Hand)
{
    with Hand { instance_destroy(); }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (flashing = 1 or flashing = 3)
{
    d3d_set_fog(true, c_white, 0, 0);
}

if IntroTimer == 0
{
    drawSelf();
    if attack == 1 &amp;&amp; shootTimer &gt; 60
    {
        draw_sprite_ext(sprite_index,3,round(x),round(y),image_xscale,image_yscale,image_angle,image_blend,image_alpha);
    }
}
else
{
    draw_sprite_ext(sprGorillaTankEyes,-1,round(x),round(y),image_xscale,image_yscale,image_angle,image_blend,image_alpha);
    draw_sprite_ext(sprite_index,-1,round(x),round(y),image_xscale,image_yscale,image_angle,image_blend,1-((floor(IntroTimer/(30/2))*(30/2))/30));
}

if (flashing = 1 or flashing = 3)
{
    d3d_set_fog(false, 0, 0, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
