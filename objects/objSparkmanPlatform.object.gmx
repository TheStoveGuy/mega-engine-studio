<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSparkmanPlatform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>prtMovingPlatformSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

acc = 0.15; //The vertical acceleration
subY = 0; //Because moving in sub-pixels messed up collision, we need a value that keeps track of the sub-pixels, and only use real pixels for yspeed
subYspeed = 0;
maxSpeed = 3;
decendSpeed = 1;
phase = 0; //0 = not moving; 1 = moving up; 2 = moving down

dir = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    if phase = 0
    {
        with objMegaman 
        {
            if ground
            {
                if place_meeting(x,y+other.dir,other.id)
                {
                    other.phase = 1;
                }
            }
        }
    }
    if phase == 1 //Moving up
    {
        yspeed -= acc*dir;
        if yspeed*dir &lt; -maxSpeed
        {
            yspeed = -maxSpeed*dir
        }
        
        ys = yspeed;
        generalCollision();
        if place_meeting(x, y, objSparkmanPlatformStop) or (yspeed = 0 &amp;&amp; ys != 0)
        {
            yspeed = 0;
            subYspeed = 0;
            subY = 0;
            phase = 2;
        }
    }
    else if phase == 2 //Moving down
    {
        yspeed = decendSpeed*dir;
        if (y &gt;= ystart &amp;&amp; dir = 1) or (y &lt;= ystart &amp;&amp; dir = -1)
        {
            yspeed = ystart-y;
            event_inherited();
            yspeed = 0;
            phase = 0;
        }
    }
}
else if dead
{
    phase = 0;
    xspeed = 0;
    yspeed = 0;
    subYspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
