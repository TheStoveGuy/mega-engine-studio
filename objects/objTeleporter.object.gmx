<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMegamanTeleport</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtGimmick</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// enemylock = ;
// X = ;
// Y = ;
// myroom = ;
// teleportOnce = ;
// LockLayer = ;

event_inherited();

playerMet[global.playerCount] = true;
drawarrow = 0;

teleporting = false;
teleportTimer = 0;
permalock = 0;
lightt = 0;

//Creation Code variables
myroom = -1;
X = -1;
Y = -1;

pressup = 0;
enemylock = false;
keylock = false;

teleportonce = false;
newlevel = 1;

light = sprTeleporterLight;
lightx = 0;
lighty = -32;
lightsp = 1/12;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

lock = permalock;
if enemylock //If enemy is alive -&gt; lock teleporter
{
    with prtEnemy
    {
        if !dead
        {
            other.lock += 1;
            break;
        }
    }
}

if !global.frozen &amp;&amp; !teleporting &amp;&amp; !lock
{
    image_yscale = global.GravityDir;
    
    with objMegaman
    {
        if canMove
        {
            if place_meeting(x,y,other.id)
            {
                if abs(other.x-x) &lt;= 5 &amp;&amp; ground
                {
                    other.drawarrow = 1;
                    if (vdir = -global.GravityDir &amp;&amp; other.pressup)
                    or (!other.playerMet[player_id] &amp;&amp; !other.pressup)
                    {
                        if other.keylock
                        {
                            if global.keyNumber
                            {
                                global.keyNumber -= 1;
                                other.keylock = 0;
                                playSFX(sfxWheelCutter2);
                            }
                            break;
                        }
                        
                        with objMegaman
                        {
                            visible = 0;
                            isShoot = false;
                        }
                        playSFX(sfxTeleportOut);
                        global.frozen = true;
                        other.teleporting = true;
                    
                        global.lastRoomHub = room;
                        global.lastTeleporterX = other.x;
                        global.lastTeleporterY = other.y;
                        global.currentLevel = other.myroom;
                        
                        break;
                    }
                }
            }
            else
            {
                other.playerMet[player_id] = 0;
            }
        }
    }
}
else
{
    var i;
    for (i=0; i&lt;global.playerCount; i+=1;)
    {
        playerMet[i] = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);

if !global.frozen
{
    lightt += lightsp;
}

if teleporting
{
    with objMegaman
    {
        visible = false;
    }
    
    //Done teleporting; play a little animation before giving Mega Man control
    if teleportTimer &lt;= 9 //disappears for one frame
    {
        drawSelf();
        draw_sprite_ext(sprMegamanTeleportPrimary, image_index, round(x), round(y), image_xscale, image_yscale, image_angle, global.primaryCol[0], image_alpha);
        draw_sprite_ext(sprMegamanTeleportSecondary, image_index, round(x), round(y), image_xscale, image_yscale, image_angle, global.secondaryCol[0], image_alpha);
        draw_sprite_ext(sprMegamanTeleportOutline, image_index, round(x), round(y), image_xscale, image_yscale, image_angle, global.outlineCol[0], image_alpha);
    }
    
    if teleportTimer == 2
    {
        image_index = 2;
    }
    else if teleportTimer == 4
    {
        image_index = 0;
    }
    else if teleportTimer == 6
    {
        image_index = 1;
    }
    else if teleportTimer = 9
    {
        image_speed = 0;
        image_index = 0;
    }
    
    teleportTimer += 1;
    
    if teleportTimer = 40
    {
        if myroom &lt;= 0
        {
            global.frozen = false;
            with objMegaman
            {
                x = other.X;
                y = other.Y;
                xspeed = 0;
                yspeed = 0;
                canMove = false;
                canHit = false;
                canGravity = false;
                canPause = false;
                canSpriteChange = false;
                isSlide = false;
                mask_index = mskMegaman;
                slideTimer = 0;
                visible = 1;
                teleporting = true;
                teleportTimer = 0;
                landy = y;
                playerCameraInit(0,0);
                playerCamera();
                Plat = -1;
                event_perform_object(objSectionSwitcher,ev_other,ev_user0);
                playerDeactivateObjects();
            }
            
            teleportTimer = 0;
            teleporting = false;
            
            if teleportonce
            {
                instance_destroy();
            }
        }
        else
        {
            if !newlevel
            {
                global.hasTeleported = 1;
                global.teleportX = X;
                global.teleportY = Y;
            }
            
            i = instance_create(0, 0, objFadeout);
            i.myRoom = myroom;
        }
    }
}
else
{
    if !lock
    {
        if light
        {
            draw_sprite(light,lightt,x+lightx,y+lighty);
        }
    }
    if pressup &amp;&amp; drawarrow
    {
        draw_sprite(sprPressUp,(image_yscale=-1),x,y-22*image_yscale);
    }
}

drawarrow = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
