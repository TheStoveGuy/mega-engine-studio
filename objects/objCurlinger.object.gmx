<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCurlinger</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 3;

//Enemy specific code
phase = 0;
dir = 0;

knocked = false;

maxXSpd = 1.5;
keptXSpd = 0;
acceleration = 0.02;
xspeed = 0;
yspeed = 0;

image_speed = 0;
image_index = 0;

//so the enemy isn't killed when trying to be knocked away
wpndmg[9] = 0; //SlashClaw
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    xs = xspeed;

    checkGround();
    gravityCheckGround();
    generalCollision();
    
    x += xspeed;
    y += yspeed;
    
    switch (phase)
    {
        case 0: //start
            if (instance_exists(target))
            {
                calibrateDirection();
                dir = image_xscale;
                phase = 1;
            }
            break;
        case 1: //stuff
            if (xspeed == 0 &amp;&amp; xs != 0)
            {
                if !knocked
                {
                    dir*=-1;
                    image_xscale*=-1;
                    playSFX(sfxCurlingerBounce);
                }
                else
                {
                    dead = true;
                    visible = 0;
                    event_user(10);
                    playSFX(sfxEnemyHit);
                }
            }
            
            if (!knocked)
            {
                if (keptXSpd &lt; maxXSpd)
                {
                    keptXSpd += acceleration;
                }
                else if (keptXSpd &gt; maxXSpd)
                {
                    keptXSpd = maxXSpd;
                }
            }
            else if (keptXSpd != 4.2) //&lt;-- speed when knocked away by slash claw here
            {
                keptXSpd = 4.2; //&lt;-- speed when knocked away by slash claw
            }
            
            xspeed = keptXSpd*dir;
            image_speed = keptXSpd / 8;
            break;
    }
}
else if dead
{
    phase = 0;
    knocked = false;
    
    keptXSpd = 0;
    xspeed = 0;
    yspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSlashClaw">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!knocked)
{
    knocked = true;
    
    calibrateDirection();
    image_xscale*=-1;
    dir = image_xscale;
    
    playSFX(sfxEnemyHit);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
