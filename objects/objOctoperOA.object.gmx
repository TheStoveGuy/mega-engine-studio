<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprOctoperOA</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>prtMiniBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code (all optional):
//dir = &lt;number&gt; (1 = face right (default); -1 = face left)

event_inherited();

respawn = true;
doesIntro = false;

healthpointsStart = 20;
healthpoints = healthpointsStart;
contactDamage = 4;

//Enemy specific code
dir = 1;

moveDelay=0;
yOffset=80;
yOffsetMax=80;

// AI and animation variables
turnRoundLeft=0;
turnRoundRight=0;
delay=0;
xscaleStorage=0;
imageTimer=1;

leftStuck=false;
rightStuck=true;

turnerTimerL=0;
turnerTimerR=0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    if (dir == 1)
    {
        image_xscale = 1;
    }
    else {image_xscale = -1;}
    
    // move y.
     yOffset+=yspeed;
     y=ystart+yOffset;
     
    // activate octoper.
    if xscaleStorage == 0
    {
    if instance_exists(target)
        xscaleStorage = target.x-x;
    xspeed = image_xscale;
    }
    
    // set reflection properties.
    if xscaleStorage &lt;0
    {
        turnRoundLeft=128;
        turnRoundRight=64;
    }
    else
    {
        turnRoundLeft=64;
        turnRoundRight=128;
    }  
    
    // if boss hits a background block, turn around.
    mySolid = instance_place(x+xspeed, y-yOffset, objSolid);
    if mySolid &gt;= 0 &amp;&amp; xspeed != 0
    {    
        if xspeed &lt; 0
            x = mySolid.x + (16*mySolid.image_xscale) + (x - (bbox_left-1));
        else
            x = mySolid.x - (bbox_right+1 - x) - 1;
        
        xspeed = -xspeed;
    }
   
      //check whether or not octoper would move off a platform. if so turn around.
      if (!position_meeting(x+56+xspeed, y+65-yOffset, objSolid) &amp;&amp; xspeed &gt; 0) &amp;&amp; (!position_meeting(x+56+xspeed, y+65-yOffset, objWater) &amp;&amp; xspeed &gt; 0)
       {    
        xspeed=-1;
        delay=2;
        rightStuck=true;
       }
      if (!position_meeting(x-56+xspeed, y+65-yOffset, objSolid) &amp;&amp; xspeed &lt; 0) &amp;&amp; (!position_meeting(x-56+xspeed, y+65-yOffset, objWater) &amp;&amp; xspeed &lt; 0)
       {    
        xspeed=1;
        delay=2;
        leftStuck=true;
       }
    
      // if octoper reaches a screen edge, turn round.
    if x&gt;=view_xview[0]+view_wview[0]-turnRoundRight &amp;&amp; delay ==0
    {    
        xspeed=-1;
        delay=1;
        rightStuck=true;
    }
    // see above
    else if x&lt;=view_xview[0]+turnRoundLeft &amp;&amp; delay ==0 
    {    
        xspeed=1;
        delay=1;
        leftStuck=true;
    }
    else
        delay=0;
        
    // bob up and down
    if yOffset &gt;=yOffsetMax
        yspeed=-1;
        
    if yOffset &lt;=0
    {
        yspeed=1;
        if instance_exists(target)
        {
            instance_create(x+37*image_xscale,y+40,objOctoperOABullet1);
        }
    }    
    // move timer.
    if xspeed !=0
        moveDelay+=1;
        
   // in mega man 5, octoper moves 1 pxiel every 3 frames. this replicates that.   
    if moveDelay==0
            x+=xspeed;
    if  moveDelay==3
            moveDelay=-1;
}
else
if !insideView()
{
xscaleStorage=0;
image_index = 0;
xspeed=0;
yspeed=-1;
yOffset=yOffsetMax;
imageTimer=1;
}                                              

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objMegaman">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.y &lt;= y+64-yOffset
{
    event_inherited();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>b = bbox_get_ycenter_object(other.id);

if !collision_rectangle(x,y,x+((bbox_right-bbox_left)/2)*image_xscale,y-16,other.id,false,false)
{
    other.guardcancel = 1;
}

if b &gt;= bbox_bottom - yOffset
{
    guardcancel = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (flashing = 1 or flashing = 3)
{
    d3d_set_fog(true, c_white, 0, 0);
}

// makes octoper face its spawned direction, regardless of other scripts.
if xscaleStorage &lt;= 0
{   
    image_xscale = 1;
    draw_sprite_part_ext(sprite_index, image_index, 0, 0, sprite_width, sprite_height-yOffset, round(x-56)+sprite_width, round(y-64), -image_xscale, image_yscale, image_blend, image_alpha);
    image_xscale = -1;
}
else
{
    image_xscale = 1;
    draw_sprite_part_ext(sprite_index, image_index, 0, 0, sprite_width, sprite_height-yOffset, round(x-56), round(y-64), image_xscale, image_yscale, image_blend, image_alpha);  
}

if imageTimer==1
{
    y=ystart+yOffset;
    imageTimer=0;
}

if (flashing = 1 or flashing = 3)
{
    d3d_set_fog(false, 0, 0, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
