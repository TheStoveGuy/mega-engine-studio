<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code:
//HitInvun = 45;   Set the length of the hit invulnerablilty of the boss. If this is 1 or lower, they don't have any.

event_inherited();

startIntro = false;
isIntro = false;
startFight = false;
isFight = false;

boss = 1;

xspeed = 0;
yspeed = 0;
image_speed = 0;
image_index = 0;

healthpoints = 1;
canHit = true;
drawHitSpark = false;
drawBoss = true; //Should we be visible? (Can't use the 'visible' variable as this prevents the Draw event from executing)

dead = false;

IntroType = 0;
IntroFade = 0;
Drop = 0;

StopAllMusic = false;
ExplosionTimer = 0;
HitInvun = 45;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canHit = true;
drawBoss = true;
drawHitSpark = false;

alarm[9] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Hitspark
drawHitSpark = !drawHitSpark;
drawBoss = !drawBoss;

alarm[9] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.frozen == false
{
/*
// Fortress Bosses are unique with their intros, so you will have to program in your own enterance movement, should be structured like this
    //Starting the intro animation
    if startIntro == true
    {
        startIntro = false;
        isIntro = true;
        visible = true;
    }

    if isIntro == true
    {
    
    // this next line should end your intro and start the boss.
    isIntro = false;
    }
*/

    if isIntro { playerLockMovement(); with prtPlayerProjectile { instance_destroy() } }
    
    
    //Starting the actual fight
    if startFight == true
    and global.bossHealth[1] &gt;= 28
    {
        startFight = false;
        isFight = true;
    }
    
    if global.flashStopper == false || stopOnFlash == false || isFight == false
    {
    x += xspeed;
    y += yspeed;
    }
}
else
{
/*    if alarm[9] != -1
        alarm[9] += 1;
    if alarm[10] != -1
        alarm[10] += 1;*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.bossHealth[1] = 0;
if StopAllMusic {
    stopMusic();
    audio_stop_all();
}
playSFX(sfxDeath);

var i, explosionID;
for (i=0; i&lt;8; i+=1;) {
    explosionID = instance_create(x, y, objMegamanExplosion);
        explosionID.dir = i*45;
        explosionID.spd = 1.5;
}
for (i=0; i&lt;8; i+=1;) {
    explosionID = instance_create(x, y, objMegamanExplosion);
        explosionID.dir = i*45;
        explosionID.spd = 2.5;
}

instance_destroy();
if Drop == 0
{
    a = instance_create(bbox_get_xcenter()-8,bbox_get_ycenter()-8,objEnergyElement);
    with a
    {
        elementNumber = other.ElementNum;
    }
}
else {
    global.LockTransition = false;
    if Drop == 2 {
        instance_create(x, y, objLifeEnergyBig);
    }
    if StopAllMusic {
        playMusic(global.LevelSong,global.LevelLoop,global.LevelVolume);
        if global.LevelLoop == true {
            setMusicLoop(global.LevelLoopStart, global.LevelLoopEnd);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if isIntro == true
and IntroType == 1
    {
    draw_set_alpha(IntroFade);
    draw_set_color(c_black);
    draw_rectangle(view_xview,view_yview,view_xview+view_wview,view_yview+view_hview,0);
    draw_set_alpha(1);
    }

if drawBoss == true
    drawSelf();
    
//if drawHitSpark == true
//    draw_sprite_ext(sprHitspark, 0, sprite_get_xcenter(), sprite_get_ycenter(), 1, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
