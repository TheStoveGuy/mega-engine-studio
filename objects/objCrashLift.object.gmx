<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCrashLift</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtMovingPlatformJumpthrough</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

image_speed = 0.2;
issolid = true;

mdir = 'up';
xSpeed = 0;
ySpeed = -1;

startDir = mdir;
xspeedStart = xSpeed;
yspeedStart = ySpeed;

init = 1;

respawnRange = -1;
despawnRange = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if init
{
    init = 0;
    startDir = mdir;
    xspeedStart = xSpeed;
    yspeedStart = ySpeed;
}

event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    xspeed = xSpeed;
    yspeed = ySpeed;
    if collision_rectangle(x+14,y+13,x+15,y+16,objLineTopLeft,false,true)
    {
        if mdir = 'up' {
            mdir = 'right'
            xSpeed = -ySpeed;
            ySpeed = 0;
        }
        else if mdir = 'left' {
            mdir = 'down'
            ySpeed = -xSpeed;
            xSpeed = 0;
        }
    }
    if collision_rectangle(x,y+13,x+1,y+16,objLineTopRight,false,true)
    {
        if mdir = 'up' {
            mdir = 'left'
            xSpeed = ySpeed;
            ySpeed = 0;
        }
        else if mdir = 'right' {
            mdir = 'down'
            ySpeed = xSpeed;
            xSpeed = 0;
        }
    }
    if collision_rectangle(x+14,y-1,x+15,y,objLineBottomLeft,false,true)
    {
        if mdir = 'down' {
            mdir = 'right'
            xSpeed = ySpeed;
            ySpeed = 0;
        }
        else if mdir = 'left' {
            mdir = 'up'
            ySpeed = xSpeed;
            xSpeed = 0;
        }
    }
    if collision_rectangle(x,y-1,x+1,y,objLineBottomRight,false,true)
    {
        if mdir = 'down' {
            mdir = 'left'
            xSpeed = -ySpeed;
            ySpeed = 0;
        }
        else if mdir = 'right' {
           mdir = 'up'
           ySpeed = -xSpeed;
           xSpeed = 0;
        }
    }
}
else if dead
{
    mdir = startDir;
    xSpeed = xspeedStart;
    ySpeed = yspeedStart;
    xspeed = xSpeed;
    yspeed = ySpeed;
}

///Stop movement if out of range
/*if instance_exists(target) {
    if !insideSection(bbox_get_xcenter(),bbox_get_ycenter()) {
        x -= xspeed;
        y -= yspeed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
