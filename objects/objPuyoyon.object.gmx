<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPuyoyon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 4;

//Enemy specific code
xspeed = 0;
yspeed = 0;
image_speed = 0;
image_index = 0;
contactStart = contactDamage;

waitTimer = 0;
animTimer = 0;
groundTimer = 0;

ceiling = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead &amp;&amp; !global.flashStopper
{
    checkGround();
    generalCollisionTurnaround();
    if (image_index == 5) {gravityCheckGround();}
    if (image_index &gt; 11) {gravityCheckGroundExt(-0.25);}
    
    x += xspeed;
    y += yspeed;
    
    if collision_rectangle(x-48,y-224,x+48,y+224,target,false,true) &amp;&amp; ceiling &amp;&amp; image_index &lt; 4
    {
        image_index = 4;
        xspeed = 0;
        yspeed = 0;
    }
    
    if ceiling &amp;&amp; image_index &lt; 4
    {
        moveTimer += 1;
        if moveTimer == 40 &amp;&amp; image_index &lt; 4
        {
            calibrateDirection();
            xspeed = 1*image_xscale;
        }
        else if moveTimer == 60
        {
            xspeed = 0;
            moveTimer = 0;
        }
    }
    
    animTimer += 1;
    if animTimer == 6
    {
        animTimer = 0;
        if ceiling == true
        {
            if image_index &lt; 4
            {
                image_index += 1;
                if image_index &gt; 3 { image_index = 0; }
            }
            else if image_index == 4 { image_index = 5; }
        }
        else
        {
            if image_index &lt; 11
            {
                image_index += 1;
                if image_index &gt; 10 or image_index &lt; 7 { image_index = 7; }
            }
            else if image_index == 11 { image_index = 12; }
        }
    }
    
    if ground &amp;&amp; ceiling {ceiling = false;}
    
    if !ceiling
    {
        groundTimer += 1;
        if groundTimer == 0 &amp;&amp; image_index &lt; 11
        {
            image_index = 6;
            yspeed = 0;
        }
        else if groundTimer == 10 &amp;&amp; image_index &lt; 11
        {
            image_index = 7;
        }
        else if groundTimer == 16
        {
            if image_index == 11
            {
                y -= 4;
                xspeed = 0;
                groundTimer = 0;
            }
            else if image_index != 12
            {
                image_index = 6;
                xspeed = 1*image_xscale;
            }
        }
    }
    
    //Ceiling
    mySolid = instance_place(x, y-1, objSolid);
    if mySolid &gt;= 0 &amp;&amp; !ceiling &amp;&amp; !instance_place(x,y+1,objSolid) &amp;&amp; image_index &gt; 11
    {
        image_index = 0;
        ceiling = true;
        ground = false;
        yspeed = 0;
        waitTimer = 0;
        animTimer = 0;
        groundTimer = 0;
        y = ystart;
    }
    
    if abs(xspeed) == 1 &amp;&amp; !ceiling &amp;&amp; !collision_rectangle(x-64,y-224,x+64,y+224,target,false,true) &amp;&amp; image_index &lt; 11
    {
        image_index = 11;
        groundTimer = 11;
        xspeed = 0;
    }
}
else if dead
{
    image_index = 0;
    image_speed = 0;
    
    moveTimer = 0;
    animTimer = 0;
    groundTimer = 0;
    
    ceiling = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
